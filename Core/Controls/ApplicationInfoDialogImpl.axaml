<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:abControls="using:CarinaStudio.Controls"
		xmlns:aConverters="using:Avalonia.Data.Converters"
		xmlns:controls="using:CarinaStudio.AppSuite.Controls"
		xmlns:converters="using:CarinaStudio.AppSuite.Converters"
		xmlns:ia="using:Avalonia.Xaml.Interactivity"
        xmlns:iaCore="using:Avalonia.Xaml.Interactions.Core"
		xmlns:interop="using:System.Runtime.InteropServices"
		xmlns:net="using:CarinaStudio.AppSuite.Net"
		xmlns:scripting="using:CarinaStudio.AppSuite.Scripting"
		xmlns:sys="using:System"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="CarinaStudio.AppSuite.Controls.ApplicationInfoDialogImpl"
        Classes="Dialog"
        MinWidth="{DynamicResource Double/ApplicationInfoDialog.MinWidth}"
        SizeToContent="WidthAndHeight">

	<DockPanel>

		<!-- Control buttons -->
		<Border Classes="Dialog_ControlButtonsPanel" DockPanel.Dock="Bottom">
			<StackPanel Classes="Dialog_ControlButtonsPanel">
				<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].Close}" Content="{DynamicResource String/Common.OK}"/>
			</StackPanel>
		</Border>

		<!-- Content -->
		<ScrollViewer HorizontalScrollBarVisibility="Disabled" MaxHeight="{DynamicResource Double/ApplicationInfoDialog.Content.MaxHeight}">
			<Panel>

				<!-- Background -->
				<Border Height="{StaticResource Double/ApplicationInfoDialog.Header.Background.Height}" VerticalAlignment="Top">
					<Border.Background>
						<LinearGradientBrush EndPoint="0%,100%" StartPoint="0%,0%">
							<GradientStop Color="{DynamicResource Color/Accent.WithOpacity.0.25}" Offset="0"/>
							<GradientStop Color="{DynamicResource Color/Accent.Transparent}" Offset="1"/>
						</LinearGradientBrush>
					</Border.Background>
				</Border>

				<!-- Content -->
				<StackPanel Name="itemsPanel" Background="{x:Static Brushes.Transparent}" Classes="Dialog_ContentPanel_WithHeader">

					<!-- Icon and title -->
					<DockPanel HorizontalAlignment="Stretch">

						<!-- Icon -->
						<Border DockPanel.Dock="Left">
							<Image Height="{DynamicResource Double/ApplicationInfoDialog.AppIcon.Size}" Margin="{DynamicResource Thickness/ApplicationInfoDialog.AppIcon.Margin}" Source="{Binding Icon}" VerticalAlignment="Center" Width="{DynamicResource Double/ApplicationInfoDialog.AppIcon.Size}"/>
						</Border>

						<!-- Title and version -->
						<Border>
							<StackPanel Orientation="Vertical" VerticalAlignment="Center">
								<StackPanel Margin="{DynamicResource Thickness/ApplicationInfoDialog.AppTitle.Margin}" Orientation="Horizontal">
									<RichTextBlock FontSize="{DynamicResource Double/ApplicationInfoDialog.AppTitle.FontSize}" FontWeight="Bold" Text="{Binding Name}" VerticalAlignment="Center"/>
									<StackPanel Name="badgesPanel" Height="{StaticResource Double/ApplicationInfoDialog.AppBadge.Size}" Orientation="Horizontal" VerticalAlignment="Center"/>
								</StackPanel>
								<StackPanel Orientation="Horizontal">
									<RichTextBlock Opacity="{StaticResource Double/ApplicationInfoDialog.AppVersion.Opacity}" Text="{Binding $parent[Window].VersionString}" VerticalAlignment="Center"/>
									<Separator Classes="Dialog_Separator_Small"/>
									<TextBlock Text="[" IsVisible="{Binding $parent[Window].HasApplicationChangeList}" VerticalAlignment="Center"/>
									<abControls:LinkTextBlock Command="{Binding $parent[Window].ShowApplicationChangeList}" IsVisible="{Binding $parent[Window].HasApplicationChangeList}" Text="{DynamicResource String/ApplicationInfoDialog.ApplicationChangeList}" VerticalAlignment="Center"/>
									<TextBlock Text="]" IsVisible="{Binding $parent[Window].HasApplicationChangeList}" VerticalAlignment="Center"/>
								</StackPanel>
							</StackPanel>
						</Border>

					</DockPanel>
					<Separator Classes="Dialog_Separator_Large"/>

					<!-- Open source attribution -->
					<StackPanel Name="openSourceAttrPanel" Orientation="Horizontal">
						<StackPanel.IsVisible>
							<MultiBinding Converter="{x:Static aConverters:BoolConverters.And}">
								<Binding Path="IsOpenSourceBased"/>
								<Binding Path="GitHubProjectUri" Converter="{x:Static aConverters:ObjectConverters.IsNotNull}"/>
							</MultiBinding>
						</StackPanel.IsVisible>
						<TextBlock Text="{Binding Name}" VerticalAlignment="Center"/>
						<Separator Classes="Dialog_Separator_Small"/>
						<TextBlock Text="{DynamicResource String/ApplicationInfoDialog.Attribution.OpenSourceBased.Section1}" VerticalAlignment="Center"/>
						<Separator Classes="Dialog_Separator_Small"/>
						<abControls:LinkTextBlock Text="{DynamicResource String/ApplicationInfoDialog.Attribution.OpenSourceBased.Section2}" Uri="{Binding GitHubProjectUri}" VerticalAlignment="Center"/>
						<Separator Classes="Dialog_Separator_Small"/>
						<TextBlock Text="{DynamicResource String/ApplicationInfoDialog.Attribution.OpenSourceBased.Section3}" VerticalAlignment="Center"/>
					</StackPanel>
					<Separator Classes="Dialog_Separator_Small" IsVisible="{Binding #openSourceAttrPanel.IsVisible}"/>

					<!-- App icon attribution (Flaticon) -->
					<StackPanel Orientation="Horizontal" IsVisible="False">
						<ia:Interaction.Behaviors>
							<iaCore:DataTriggerBehavior Binding="{Binding IconWebSite}" Value="Flaticon">
								<iaCore:ChangePropertyAction PropertyName="IsVisible" Value="True"/>
							</iaCore:DataTriggerBehavior>
						</ia:Interaction.Behaviors>
						<TextBlock Text="{DynamicResource String/ApplicationInfoDialog.Attribution.AppIcon.Section1.Flaticon}" VerticalAlignment="Center"/>
						<abControls:LinkTextBlock IsVisible="False" Text=" Freepik " Uri="https://www.freepik.com/" VerticalAlignment="Center">
							<ia:Interaction.Behaviors>
								<iaCore:DataTriggerBehavior Binding="{Binding IconCreator}" Value="Freepik">
									<iaCore:ChangePropertyAction PropertyName="IsVisible" Value="True"/>
								</iaCore:DataTriggerBehavior>
							</ia:Interaction.Behaviors>
						</abControls:LinkTextBlock>
						<TextBlock Text="{DynamicResource String/ApplicationInfoDialog.Attribution.AppIcon.Section2.Flaticon}" VerticalAlignment="Center"/>
						<abControls:LinkTextBlock Text=" Flaticon " Uri="https://www.flaticon.com/" VerticalAlignment="Center"/>
						<TextBlock Text="{DynamicResource String/ApplicationInfoDialog.Attribution.AppIcon.Section3.Flaticon}" VerticalAlignment="Center"/>
					</StackPanel>
					<Separator Classes="Dialog_Separator"/>

					<!-- Copyright -->
					<TextBlock Text="Â©2021 Carina Studio"/>
					<Separator Classes="Dialog_Separator_Large"/>

					<!-- System info (Header) -->
					<Border Classes="Dialog_TextBlock_Header1">
						<TextBlock Classes="Dialog_TextBlock_Header1" Text="{DynamicResource String/ApplicationInfoDialog.SystemInformation}"/>
					</Border>

					<!-- Device name -->
					<abControls:FormattedTextBlock Arg1="{x:Static sys:Environment.MachineName}" Format="{DynamicResource String/ApplicationInfoDialog.DeviceName}" TextTrimming="CharacterEllipsis"/>
					<Separator Classes="Dialog_Separator_Small"/>

					<!-- Operating system -->
					<abControls:FormattedTextBlock Arg1="{Binding OperatingSystemDescription}" Format="{DynamicResource String/ApplicationInfoDialog.OperatingSystem}" TextTrimming="CharacterEllipsis"/>
					<Separator Classes="Dialog_Separator_Small"/>

					<!-- Framework version -->
					<StackPanel Orientation="Horizontal">
						<abControls:FormattedTextBlock Arg1="{Binding FrameworkVersion}" Format="{DynamicResource String/ApplicationInfoDialog.FrameworkVersion}" TextTrimming="CharacterEllipsis" VerticalAlignment="Center"/>
						<Separator Classes="Dialog_Separator_Small" IsVisible="{Binding IsFrameworkInstalled}"/>
						<abControls:FormattedTextBlock Arg1="{Binding InstalledFrameworkVersion}" Format="{DynamicResource String/ApplicationInfoDialog.InstalledFrameworkVersion}" IsVisible="{Binding IsFrameworkInstalled}" TextTrimming="CharacterEllipsis"/>
					</StackPanel>
					<Separator Classes="Dialog_Separator_Small"/>

					<!-- Processor count -->
					<StackPanel IsVisible="{Binding $parent[Window].Application.IsDebugMode}">
						<abControls:FormattedTextBlock Arg1="{x:Static sys:Environment.ProcessorCount}" Format="{DynamicResource String/ApplicationInfoDialog.ProcessorCount}" TextTrimming="CharacterEllipsis"/>
						<Separator Classes="Dialog_Separator_Small"/>
					</StackPanel>

					<!-- Total physical memory -->
					<abControls:FormattedTextBlock Arg1="{Binding $parent[Window].Application.HardwareInfo.TotalPhysicalMemory, Converter={x:Static converters:FileSizeConverter.Default}}" Format="{DynamicResource String/ApplicationInfoDialog.TotalPhysicalMemory}" IsVisible="{Binding $parent[Window].HasTotalPhysicalMemory}" TextTrimming="CharacterEllipsis"/>
					<Separator Classes="Dialog_Separator_Small"/>

					<!-- Network connection -->
					<Panel>
						<abControls:FormattedTextBlock Arg1="{Binding PublicIPAddress, Source={x:Static net:NetworkManager.Default}}" Format="{DynamicResource String/ApplicationInfoDialog.NetworkConnection.Connected}" IsVisible="{Binding IsNetworkConnected, Source={x:Static net:NetworkManager.Default}}" TextTrimming="CharacterEllipsis"/>
						<TextBlock IsVisible="{Binding !IsNetworkConnected, Source={x:Static net:NetworkManager.Default}}" Text="{DynamicResource String/ApplicationInfoDialog.NetworkConnection.Disconnected}" TextTrimming="CharacterEllipsis"/>
					</Panel>

					<!-- Screen info -->
					<StackPanel IsVisible="{Binding $parent[Window].Application.IsDebugMode}">

						<!-- Screen pixel density -->
						<Separator Classes="Dialog_Separator_Small"/>
						<abControls:FormattedTextBlock Arg1="{Binding $parent[Window].ScreenPixelDensity}" Format="{DynamicResource String/ApplicationInfoDialog.Screen.PixelDensity}" TextTrimming="CharacterEllipsis"/>

						<!-- Screen size -->
						<Separator Classes="Dialog_Separator_Small"/>
						<abControls:FormattedTextBlock Arg1="{Binding $parent[Window].PhysicalScreenSize, Converter={x:Static controls:ApplicationInfoDialogImpl.SizeToStringConverter}}" Arg2="{Binding $parent[Window].ScreenSize, Converter={x:Static controls:ApplicationInfoDialogImpl.SizeToStringConverter}}" Format="{DynamicResource String/ApplicationInfoDialog.Screen.Size}" TextTrimming="CharacterEllipsis"/>

						<!-- Working area -->
						<Separator Classes="Dialog_Separator_Small"/>
						<abControls:FormattedTextBlock Arg1="{Binding $parent[Window].PhysicalScreenWorkingArea, Converter={x:Static controls:ApplicationInfoDialogImpl.RectToStringConverter}}" Arg2="{Binding $parent[Window].ScreenWorkingArea, Converter={x:Static controls:ApplicationInfoDialogImpl.RectToStringConverter}}" Format="{DynamicResource String/ApplicationInfoDialog.Screen.WorkingArea}" TextTrimming="CharacterEllipsis"/>

					</StackPanel>
					<Separator Classes="Dialog_Separator_Large"/>

					<!-- Process info (Header) -->
					<Border Classes="Dialog_TextBlock_Header1">
						<TextBlock Classes="Dialog_TextBlock_Header1" Text="{DynamicResource String/ApplicationInfoDialog.ProcessInformation}"/>
					</Border>

					<!-- Process ID -->
					<abControls:FormattedTextBlock Arg1="{Binding $parent[Window].Application.ProcessInfo.ProcessId, Mode=OneTime}" Format="{DynamicResource String/ApplicationInfoDialog.ProcessId}" TextTrimming="CharacterEllipsis"/>
					<Separator Classes="Dialog_Separator_Small"/>

					<!-- Thread count -->
					<abControls:FormattedTextBlock Arg1="{Binding $parent[Window].Application.ProcessInfo.ThreadCount}" Format="{DynamicResource String/ApplicationInfoDialog.ThreadCount}" TextTrimming="CharacterEllipsis"/>
					<Separator Classes="Dialog_Separator_Small"/>

					<!-- CPU usage -->
					<abControls:FormattedTextBlock Arg1="{Binding $parent[Window].Application.ProcessInfo.CpuUsagePercentage}" Format="{DynamicResource String/ApplicationInfoDialog.CpuUsage}" TextTrimming="CharacterEllipsis"/>
					<Separator Classes="Dialog_Separator_Small"/>

					<!-- Private memory usage -->
					<abControls:FormattedTextBlock Arg1="{Binding $parent[Window].Application.ProcessInfo.PrivateMemoryUsage, Converter={x:Static converters:FileSizeConverter.Default}}" Format="{DynamicResource String/ApplicationInfoDialog.PrivateMemoryUsage}" TextTrimming="CharacterEllipsis"/>

					<!-- Managed environment information -->
					<StackPanel IsVisible="{Binding $parent[Window].Application.IsDebugMode}">

						<!-- Managed heap size -->
						<Separator Classes="Dialog_Separator_Small"/>
						<abControls:FormattedTextBlock Arg1="{Binding $parent[Window].Application.ProcessInfo.ManagedHeapSize, Converter={x:Static converters:FileSizeConverter.Default}}" Format="{DynamicResource String/ApplicationInfoDialog.ManagedHeapSize}" TextTrimming="CharacterEllipsis"/>

						<!-- Managed heap usage -->
						<Separator Classes="Dialog_Separator_Small"/>
						<abControls:FormattedTextBlock Arg1="{Binding $parent[Window].Application.ProcessInfo.ManagedHeapUsage, Converter={x:Static converters:FileSizeConverter.Default}}" Format="{DynamicResource String/ApplicationInfoDialog.ManagedHeapUsage}" TextTrimming="CharacterEllipsis"/>

						<!-- GC frequency -->
						<Separator Classes="Dialog_Separator_Small"/>
						<abControls:FormattedTextBlock Arg1="{Binding $parent[Window].Application.ProcessInfo.GCFrequency}" Format="{DynamicResource String/ApplicationInfoDialog.GCFrequency}" TextTrimming="CharacterEllipsis"/>

						<!-- Finalization pending count -->
						<Separator Classes="Dialog_Separator_Small"/>
						<abControls:FormattedTextBlock Arg1="{Binding $parent[Window].Application.ProcessInfo.FinalizationPendingCount}" Format="{DynamicResource String/ApplicationInfoDialog.FinalizationPendingCount}" TextTrimming="CharacterEllipsis"/>

					</StackPanel>
					
					<!-- Script info -->
					<StackPanel Name="scriptInfoPanel" IsVisible="False">

						<!-- Running script count -->
						<Separator Classes="Dialog_Separator_Small"/>
						<abControls:FormattedTextBlock Arg1="{Binding RunningScriptCount, Source={x:Static scripting:ScriptManager.Default}}" Format="{DynamicResource String/ApplicationInfoDialog.RunningScriptCount}" TextTrimming="CharacterEllipsis"/>

						<!-- Script running loading -->
						<Separator Classes="Dialog_Separator_Small"/>
						<abControls:FormattedTextBlock Arg1="{Binding ScriptRunningLoading, Source={x:Static scripting:ScriptManager.Default}, Converter={x:Static converters:RatioToPercentageConverter.Default}}" Format="{DynamicResource String/ApplicationInfoDialog.ScriptRunningLoading}" TextTrimming="CharacterEllipsis"/>

					</StackPanel>
					<Separator Classes="Dialog_Separator_Large"/>

					<!-- Activated products -->
					<StackPanel Name="productListSectionPanel">
						<Border Classes="Dialog_TextBlock_Header1">
							<TextBlock Classes="Dialog_TextBlock_Header1" Text="{DynamicResource String/ApplicationInfoDialog.Products}"/>
						</Border>
						<StackPanel Name="productListPanel"/>
						<Separator Classes="Dialog_Separator_Large"/>
					</StackPanel>

					<!-- Assemblies (Header) -->
					<Border Classes="Dialog_TextBlock_Header1">
						<TextBlock Classes="Dialog_TextBlock_Header1" Text="{DynamicResource String/ApplicationInfoDialog.Assemblies}"/>
					</Border>

					<!-- Assemblies -->
					<StackPanel Name="assembliesPanel"/>
					<Separator Classes="Dialog_Separator_Large"/>
					
					<!-- Other information -->
					<Border Classes="Dialog_TextBlock_Header1">
						<TextBlock Classes="Dialog_TextBlock_Header1" Text="{DynamicResource String/ApplicationInfoDialog.Other}"/>
					</Border>

					<!-- Donate -->
					<StackPanel IsVisible="{Binding PayPalUri, Converter={x:Static aConverters:ObjectConverters.IsNotNull}}">
						<StackPanel Orientation="Horizontal">
							<Image Classes="Dialog_Icon" Source="{StaticResource Image/Icon.PayPal.Outline.Colored}"/>
							<abControls:LinkTextBlock Classes="Dialog_Icon_LinkTextBlock" Text="{DynamicResource String/ApplicationInfoDialog.DonateWithPayPal}" Uri="{Binding PayPalUri}"/>
						</StackPanel>
						<Separator Classes="Dialog_Separator_Small"/>
					</StackPanel>

					<!-- Website -->
					<StackPanel IsVisible="{Binding WebsiteUri, Converter={x:Static aConverters:ObjectConverters.IsNotNull}}">
						<StackPanel Orientation="Horizontal">
							<Image Classes="Dialog_Icon" Source="{StaticResource Image/Icon.Website}"/>
							<abControls:FormattedLinkTextBlock Classes="Dialog_Icon_LinkTextBlock" Arg1="{Binding Application.Name}" Format="{DynamicResource String/ApplicationInfoDialog.Website}" Uri="{Binding WebsiteUri}"/>
						</StackPanel>
						<Separator Classes="Dialog_Separator_Small"/>
					</StackPanel>

					<!-- User agreement -->
					<StackPanel IsVisible="{Binding UserAgreementUri, Converter={x:Static aConverters:ObjectConverters.IsNotNull}}">
						<StackPanel Orientation="Horizontal">
							<Image Classes="Dialog_Icon" Source="{StaticResource Image/Icon.UserAgreement.Outline}"/>
							<abControls:LinkTextBlock Classes="Dialog_Icon_LinkTextBlock" Text="{DynamicResource String/ApplicationInfoDialog.UserAgreement}" Uri="{Binding UserAgreementUri}"/>
						</StackPanel>
						<Separator Classes="Dialog_Separator_Small"/>
					</StackPanel>

					<!-- Privacy policy -->
					<StackPanel IsVisible="{Binding PrivacyPolicyUri, Converter={x:Static aConverters:ObjectConverters.IsNotNull}}">
						<StackPanel Orientation="Horizontal">
							<Image Classes="Dialog_Icon" Source="{StaticResource Image/Icon.PrivacyPolicy.Outline}"/>
							<abControls:LinkTextBlock Classes="Dialog_Icon_LinkTextBlock" Text="{DynamicResource String/ApplicationInfoDialog.PrivacyPolicy}" Uri="{Binding PrivacyPolicyUri}"/>
						</StackPanel>
						<Separator Classes="Dialog_Separator_Small"/>
					</StackPanel>

					<!-- External dependencies -->
					<StackPanel IsVisible="{Binding $parent[Window].HasExternalDependencies}">
						<StackPanel Orientation="Horizontal">
							<Image Classes="Dialog_Icon" Source="{StaticResource Image/Icon.Dependencies}"/>
							<abControls:LinkTextBlock Classes="Dialog_Icon_LinkTextBlock" Command="{Binding $parent[Window].ShowExternalDependencies}" Text="{DynamicResource String/ApplicationInfoDialog.ExternalDependencies}"/>
						</StackPanel>
						<Separator Classes="Dialog_Separator_Small"/>
					</StackPanel>

					<!-- Restart in debug mode -->
					<StackPanel IsVisible="{Binding !$parent[Window].Application.IsDebugMode}">
						<StackPanel Orientation="Horizontal">
							<Image Classes="Dialog_Icon" Source="{StaticResource Image/Icon.Debug.Outline}"/>
							<abControls:LinkTextBlock Classes="Dialog_Icon_LinkTextBlock" Command="{Binding $parent[Window].RestartInDebugMode}" Text="{DynamicResource String/ApplicationInfoDialog.RestartInDebugMode}"/>
						</StackPanel>
						<Separator Classes="Dialog_Separator_Small"/>
					</StackPanel>

					<!-- Export logs -->
					<StackPanel Orientation="Horizontal">
						<Image Classes="Dialog_Icon" Source="{StaticResource Image/Icon.Export}"/>
						<abControls:LinkTextBlock Classes="Dialog_Icon_LinkTextBlock" Command="{Binding $parent[Window].ExportLogs}" Text="{DynamicResource String/ApplicationInfoDialog.ExportAppLogs}"/>
					</StackPanel>

				</StackPanel>
			</Panel>
		</ScrollViewer>

	</DockPanel>

</Window>
