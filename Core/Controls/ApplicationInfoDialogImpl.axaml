<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:abControls="using:CarinaStudio.Controls"
		xmlns:controls="using:CarinaStudio.AppSuite.Controls"
		xmlns:converters="using:CarinaStudio.AppSuite.Converters"
		xmlns:ia="using:Avalonia.Xaml.Interactivity"
        xmlns:iaCore="using:Avalonia.Xaml.Interactions.Core"
		xmlns:net="using:CarinaStudio.AppSuite.Net"
		xmlns:scripting="using:CarinaStudio.AppSuite.Scripting"
		xmlns:sys="using:System"
        xmlns:vm="using:CarinaStudio.AppSuite.ViewModels"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="CarinaStudio.AppSuite.Controls.ApplicationInfoDialogImpl"
        x:CompileBindings="True"
        x:DataType="vm:ApplicationInfo"
		Name="window"
        Classes="Dialog"
        Width="{DynamicResource Double/ApplicationInfoDialog.Width}">
	
	<Window.Styles>
		<Style Selector=":is(Control).Shadowed">
			<Setter Property="Effect">
				<DropShadowEffect BlurRadius="{StaticResource Double/ApplicationInfoDialog.AppTitle.Shadow.BlurRadius}" 
				                  Color="{DynamicResource Color/ApplicationInfoDialog.AppTitle.Shadow}"
				                  OffsetX="0"
				                  OffsetY="0"/>
			</Setter>
		</Style>
	</Window.Styles>

	<DockPanel>

		<!-- Control buttons -->
		<Border x:CompileBindings="False" Classes="Dialog_ControlButtonsPanel">
			<StackPanel Classes="Dialog_ControlButtonsPanel">
				<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].ShowAppUpdateDialog}" Content="{DynamicResource String/ApplicationInfoDialog.ShowAppUpdateDialog}"/>
				<Button Classes="Dialog_ControlButton" Command="{Binding $parent[Window].Close}" Content="{DynamicResource String/Common.OK}"/>
			</StackPanel>
		</Border>

		<!-- Content -->
		<ScrollViewer HorizontalScrollBarVisibility="Disabled" MaxHeight="{DynamicResource Double/ApplicationInfoDialog.Content.MaxHeight}">
			<Panel>

				<!-- Background -->
				<Border Height="{StaticResource Double/ApplicationInfoDialog.Header.Background.Height}" VerticalAlignment="Top">
					<Border.Background>
						<LinearGradientBrush EndPoint="0%,100%" StartPoint="0%,0%">
							<GradientStop Color="{DynamicResource Color/Accent.WithOpacity.0.33}" Offset="0"/>
							<GradientStop Color="{DynamicResource Color/Accent.Transparent}" Offset="1"/>
						</LinearGradientBrush>
					</Border.Background>
				</Border>
				<Border Height="{Binding #window.Width}" RenderTransformOrigin="50%,0%" VerticalAlignment="Top">
					<Border.Background>
						<RadialGradientBrush Center="80%,0%" GradientOrigin="80%,0%" Radius="0.5">
							<GradientStop Color="#37ffffff" Offset="0"/>
							<GradientStop Color="#00ffffff" Offset="1"/>
						</RadialGradientBrush>
					</Border.Background>
					<Border.RenderTransform>
						<ScaleTransform ScaleY="0.4"/>
					</Border.RenderTransform>
				</Border>

				<!-- Content -->
				<StackPanel Name="itemsPanel" Background="{x:Static Brushes.Transparent}" Classes="Dialog_ContentPanel_WithItemsGroups">

					<!-- Icon and title -->
					<DockPanel HorizontalAlignment="Stretch">

						<!-- Icon -->
						<Border DockPanel.Dock="Left">
							<Image Height="{DynamicResource Double/ApplicationInfoDialog.AppIcon.Size}" Margin="{DynamicResource Thickness/ApplicationInfoDialog.AppIcon.Margin}" Source="{Binding Icon}" VerticalAlignment="Center" Width="{DynamicResource Double/ApplicationInfoDialog.AppIcon.Size}"/>
						</Border>

						<!-- Title and version -->
						<Border x:CompileBindings="False">
							<StackPanel Orientation="Vertical" VerticalAlignment="Center">
								<StackPanel Margin="{StaticResource Thickness/ApplicationInfoDialog.AppTitle.Margin}" Orientation="Horizontal">
									<SelectableTextBlock Classes="Shadowed" FontSize="{DynamicResource Double/ApplicationInfoDialog.AppTitle.FontSize}" FontWeight="Bold" Text="{Binding Name}" VerticalAlignment="Center"/>
									<StackPanel Name="badgesPanel" Classes="Shadowed" Height="{StaticResource Double/ApplicationInfoDialog.AppBadge.Size}" Orientation="Horizontal" VerticalAlignment="Center"/>
								</StackPanel>
								<WrapPanel Orientation="Horizontal">
									<SelectableTextBlock Classes="Shadowed" FontSize="{StaticResource Double/ApplicationInfoDialog.AppVersion.FontSize}" Opacity="{StaticResource Double/ApplicationInfoDialog.AppVersion.Opacity}" Text="{Binding $parent[Window].VersionString}" VerticalAlignment="Center"/>
									<TextBlock Classes="Shadowed" FontSize="{StaticResource Double/ApplicationInfoDialog.AppVersion.FontSize}" IsVisible="{Binding $parent[Window].HasApplicationChangeList}" Margin="5,0,5,0" Text="|" VerticalAlignment="Center"/>
									<abControls:LinkTextBlock Classes="Shadowed" Command="{Binding $parent[Window].ShowApplicationChangeList}" FontSize="{StaticResource Double/ApplicationInfoDialog.AppVersion.FontSize}" IsVisible="{Binding $parent[Window].HasApplicationChangeList}" Text="{DynamicResource String/ApplicationInfoDialog.ApplicationChangeList}" VerticalAlignment="Center"/>
								</WrapPanel>
							</StackPanel>
						</Border>

					</DockPanel>
					<Separator Classes="Dialog_Separator_Large"/>

					<!-- Open source attribution -->
					<WrapPanel Name="openSourceAttrPanel" Orientation="Horizontal">
						<StackPanel.IsVisible>
							<MultiBinding Converter="{x:Static BoolConverters.And}">
								<Binding Path="IsOpenSourceBased"/>
								<Binding Path="GitHubProjectUri" Converter="{x:Static ObjectConverters.IsNotNull}"/>
							</MultiBinding>
						</StackPanel.IsVisible>
						<TextBlock Text="{Binding Name}" VerticalAlignment="Center"/>
						<Separator Classes="Dialog_Separator_Small"/>
						<TextBlock Text="{DynamicResource String/ApplicationInfoDialog.Attribution.OpenSourceBased.Section1}" VerticalAlignment="Center"/>
						<Separator Classes="Dialog_Separator_Small"/>
						<abControls:LinkTextBlock Text="{DynamicResource String/ApplicationInfoDialog.Attribution.OpenSourceBased.Section2}" Uri="{Binding GitHubProjectUri}" VerticalAlignment="Center"/>
						<Separator Classes="Dialog_Separator_Small"/>
						<TextBlock Text="{DynamicResource String/ApplicationInfoDialog.Attribution.OpenSourceBased.Section3}" VerticalAlignment="Center"/>
					</WrapPanel>
					<Separator Classes="Dialog_Separator_Small" IsVisible="{Binding #openSourceAttrPanel.IsVisible}"/>

					<!-- App icon attribution (Flaticon) -->
					<WrapPanel Orientation="Horizontal" IsVisible="False">
						<ia:Interaction.Behaviors>
							<iaCore:DataTriggerBehavior Binding="{Binding IconWebSite}" Value="Flaticon">
								<iaCore:ChangePropertyAction PropertyName="IsVisible" Value="True"/>
							</iaCore:DataTriggerBehavior>
						</ia:Interaction.Behaviors>
						<TextBlock Text="{DynamicResource String/ApplicationInfoDialog.Attribution.AppIcon.Section1.Flaticon}" VerticalAlignment="Center"/>
						<abControls:LinkTextBlock IsVisible="False" Text=" Freepik " Uri="https://www.freepik.com/" VerticalAlignment="Center">
							<ia:Interaction.Behaviors>
								<iaCore:DataTriggerBehavior Binding="{Binding IconCreator}" Value="Freepik">
									<iaCore:ChangePropertyAction PropertyName="IsVisible" Value="True"/>
								</iaCore:DataTriggerBehavior>
							</ia:Interaction.Behaviors>
						</abControls:LinkTextBlock>
						<TextBlock Text="{DynamicResource String/ApplicationInfoDialog.Attribution.AppIcon.Section2.Flaticon}" VerticalAlignment="Center"/>
						<abControls:LinkTextBlock Text=" Flaticon " Uri="https://www.flaticon.com/" VerticalAlignment="Center"/>
						<TextBlock Text="{DynamicResource String/ApplicationInfoDialog.Attribution.AppIcon.Section3.Flaticon}" VerticalAlignment="Center"/>
					</WrapPanel>
					<Separator Classes="Dialog_Separator"/>

					<!-- Copyright -->
					<TextBlock x:CompileBindings="False" Text="{Binding $parent[Window].Copyright, Mode=OneTime}"/>
					<Separator Classes="Dialog_Separator_Large"/>

					<!-- System info -->
					<Border Classes="Dialog_ItemsGroup_Header">
						<TextBlock Classes="Dialog_ItemsGroup_Header" Text="{DynamicResource String/ApplicationInfoDialog.SystemInformation}"/>
					</Border>
					<Border Classes="Dialog_ItemsGroup_Container">
						<StackPanel>

							<!-- Device name -->
							<controls:CompactDialogItemGrid>
								<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ApplicationInfoDialog.DeviceName}"/>
								<SelectableTextBlock Grid.Column="1" Text="{x:Static sys:Environment.MachineName}" TextTrimming="CharacterEllipsis"/>
							</controls:CompactDialogItemGrid>
							<Separator Classes="Dialog_Item_Separator"/>

							<!-- Operating system -->
							<controls:CompactDialogItemGrid>
								<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ApplicationInfoDialog.OperatingSystem}"/>
								<SelectableTextBlock Grid.Column="1" Text="{Binding OperatingSystemDescription}" TextTrimming="CharacterEllipsis"/>
							</controls:CompactDialogItemGrid>
							<Separator Classes="Dialog_Item_Separator"/>

							<!-- Framework version -->
							<controls:CompactDialogItemGrid>
								<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ApplicationInfoDialog.FrameworkVersion}"/>
								<SelectableTextBlock Grid.Column="1" Text="{Binding FrameworkVersion}" TextTrimming="CharacterEllipsis"/>
							</controls:CompactDialogItemGrid>
							<Separator Classes="Dialog_Item_Separator"/>

							<!-- Processor count -->
							<StackPanel x:CompileBindings="False" IsVisible="{Binding $parent[Window].Application.IsDebugMode}">
								<controls:CompactDialogItemGrid>
									<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ApplicationInfoDialog.ProcessorCount}"/>
									<SelectableTextBlock Grid.Column="1" Text="{Binding Source={x:Static sys:Environment.ProcessorCount}}" TextTrimming="CharacterEllipsis"/>
								</controls:CompactDialogItemGrid>
								<Separator Classes="Dialog_Item_Separator"/>
							</StackPanel>

							<!-- Total physical memory -->
							<StackPanel x:CompileBindings="False" IsVisible="{Binding $parent[Window].HasTotalPhysicalMemory}">
								<controls:CompactDialogItemGrid>
									<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ApplicationInfoDialog.TotalPhysicalMemory}"/>
									<SelectableTextBlock Grid.Column="1" Text="{Binding $parent[Window].Application.HardwareInfo.TotalPhysicalMemory, Converter={x:Static converters:FileSizeConverter.Default}}" TextTrimming="CharacterEllipsis"/>
								</controls:CompactDialogItemGrid>
								<Separator Classes="Dialog_Item_Separator"/>
							</StackPanel>

							<!-- Network connection -->
							<controls:CompactDialogItemGrid>
								<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ApplicationInfoDialog.NetworkConnection}"/>
								<Panel Grid.Column="1">
									<SelectableTextBlock IsVisible="{Binding !IsNetworkConnected, Source={x:Static net:NetworkManager.Default}}" Text="{DynamicResource String/ApplicationInfoDialog.NetworkConnection.Disconnected}" TextTrimming="CharacterEllipsis"/>
									<abControls:FormattedSelectableTextBlock Arg1="{Binding PublicIPAddress, Source={x:Static net:NetworkManager.Default}}" Format="{DynamicResource String/ApplicationInfoDialog.NetworkConnection.Format}" IsVisible="{Binding IsNetworkConnected, Source={x:Static net:NetworkManager.Default}}" TextTrimming="CharacterEllipsis"/>
								</Panel>
							</controls:CompactDialogItemGrid>

							<!-- Primary network interface -->
							<StackPanel x:CompileBindings="False">
								<StackPanel.IsVisible>
									<MultiBinding Converter="{x:Static BoolConverters.And}">
										<Binding Path="PrimaryNetworkInterfacePhysicalAddress" ElementName="window" Converter="{x:Static StringConverters.IsNotNullOrEmpty}"/>
										<Binding Path="Application.IsDebugMode" ElementName="window"/>
									</MultiBinding>
								</StackPanel.IsVisible>
								<Separator Classes="Dialog_Item_Separator"/>
								<controls:CompactDialogItemGrid>
									<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ApplicationInfoDialog.PrimaryNetworkInterface}"/>
									<abControls:FormattedSelectableTextBlock Arg1="{Binding PrimaryInterfaceName, Source={x:Static net:NetworkManager.Default}}" Arg2="{Binding PrimaryInterfaceType, Converter={x:Static controls:ApplicationInfoDialogImpl.NetworkInterfaceTypeConverter}, Source={x:Static net:NetworkManager.Default}}" Arg3="{Binding $parent[Window].PrimaryNetworkInterfacePhysicalAddress}" Format="{DynamicResource String/ApplicationInfoDialog.PrimaryNetworkInterface.Format}" Grid.Column="1" TextTrimming="CharacterEllipsis"/>
								</controls:CompactDialogItemGrid>
							</StackPanel>

							<!-- Screen info -->
							<StackPanel x:CompileBindings="False" IsVisible="{Binding $parent[Window].Application.IsDebugMode}">

								<!-- Screen pixel density -->
								<Separator Classes="Dialog_Item_Separator"/>
								<controls:CompactDialogItemGrid>
									<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ApplicationInfoDialog.Screen.PixelDensity}"/>
									<abControls:FormattedSelectableTextBlock Grid.Column="1" Arg1="{Binding $parent[Window].ScreenPixelDensity}" Format="{DynamicResource String/ApplicationInfoDialog.Screen.PixelDensity.Format}" TextTrimming="CharacterEllipsis"/>
								</controls:CompactDialogItemGrid>

								<!-- Screen size -->
								<Separator Classes="Dialog_Item_Separator"/>
								<controls:CompactDialogItemGrid>
									<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ApplicationInfoDialog.Screen.Size}"/>
									<abControls:FormattedSelectableTextBlock Grid.Column="1" Arg1="{Binding $parent[Window].PhysicalScreenSize, Converter={x:Static controls:ApplicationInfoDialogImpl.SizeToStringConverter}}" Arg2="{Binding $parent[Window].ScreenSize, Converter={x:Static controls:ApplicationInfoDialogImpl.SizeToStringConverter}}" Format="{DynamicResource String/ApplicationInfoDialog.Screen.Size.Format}" TextTrimming="CharacterEllipsis"/>
								</controls:CompactDialogItemGrid>
								
								<!-- Working area -->
								<Separator Classes="Dialog_Item_Separator"/>
								<controls:CompactDialogItemGrid>
									<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ApplicationInfoDialog.Screen.WorkingArea}"/>
									<abControls:FormattedSelectableTextBlock Grid.Column="1" Arg1="{Binding $parent[Window].PhysicalScreenWorkingArea, Converter={x:Static controls:ApplicationInfoDialogImpl.RectToStringConverter}}" Arg2="{Binding $parent[Window].ScreenWorkingArea, Converter={x:Static controls:ApplicationInfoDialogImpl.RectToStringConverter}}" Format="{DynamicResource String/ApplicationInfoDialog.Screen.WorkingArea.Format}" TextTrimming="CharacterEllipsis"/>
								</controls:CompactDialogItemGrid>

							</StackPanel>
						</StackPanel>
					</Border>
					<Separator Classes="Dialog_Separator_Large"/>

					<!-- Process info -->
					<Border Classes="Dialog_ItemsGroup_Header">
						<TextBlock Classes="Dialog_ItemsGroup_Header" Text="{DynamicResource String/ApplicationInfoDialog.ProcessInformation}"/>
					</Border>
					<Border x:CompileBindings="False" Classes="Dialog_ItemsGroup_Container">
						<StackPanel>

							<!-- Process ID -->
							<controls:CompactDialogItemGrid>
								<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ApplicationInfoDialog.ProcessId}"/>
								<SelectableTextBlock Grid.Column="1" Text="{Binding $parent[Window].Application.ProcessInfo.ProcessId, Mode=OneTime}" TextTrimming="CharacterEllipsis"/>
							</controls:CompactDialogItemGrid>
							<Separator Classes="Dialog_Item_Separator"/>

							<!-- Thread count -->
							<controls:CompactDialogItemGrid>
								<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ApplicationInfoDialog.ThreadCount}"/>
								<SelectableTextBlock Grid.Column="1" Text="{Binding $parent[Window].Application.ProcessInfo.ThreadCount}" TextTrimming="CharacterEllipsis"/>
							</controls:CompactDialogItemGrid>
							<Separator Classes="Dialog_Item_Separator"/>

							<!-- CPU usage -->
							<controls:CompactDialogItemGrid>
								<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ApplicationInfoDialog.CpuUsage}"/>
								<abControls:FormattedSelectableTextBlock Arg1="{Binding $parent[Window].Application.ProcessInfo.CpuUsagePercentage}" Format="{DynamicResource String/ApplicationInfoDialog.CpuUsage.Format}" Grid.Column="1" TextTrimming="CharacterEllipsis"/>
							</controls:CompactDialogItemGrid>
							<Separator Classes="Dialog_Item_Separator"/>

							<!-- Private memory usage -->
							<controls:CompactDialogItemGrid>
								<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ApplicationInfoDialog.PrivateMemoryUsage}"/>
								<SelectableTextBlock Grid.Column="1" Text="{Binding $parent[Window].Application.ProcessInfo.PrivateMemoryUsage, Converter={x:Static converters:FileSizeConverter.Default}}" TextTrimming="CharacterEllipsis"/>
							</controls:CompactDialogItemGrid>
							
							<!-- Managed environment information -->
							<StackPanel IsVisible="{Binding $parent[Window].Application.IsDebugMode}">

								<!-- Managed heap size -->
								<Separator Classes="Dialog_Item_Separator"/>
								<controls:CompactDialogItemGrid>
									<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ApplicationInfoDialog.ManagedHeapSize}"/>
									<SelectableTextBlock Grid.Column="1" Text="{Binding $parent[Window].Application.ProcessInfo.ManagedHeapSize, Converter={x:Static converters:FileSizeConverter.Default}}" TextTrimming="CharacterEllipsis"/>
								</controls:CompactDialogItemGrid>
								
								<!-- Managed heap usage -->
								<Separator Classes="Dialog_Item_Separator"/>
								<controls:CompactDialogItemGrid>
									<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ApplicationInfoDialog.ManagedHeapUsage}"/>
									<SelectableTextBlock Grid.Column="1" Text="{Binding $parent[Window].Application.ProcessInfo.ManagedHeapUsage, Converter={x:Static converters:FileSizeConverter.Default}}" TextTrimming="CharacterEllipsis"/>
								</controls:CompactDialogItemGrid>
								
								<!-- GC frequency -->
								<Separator Classes="Dialog_Item_Separator"/>
								<controls:CompactDialogItemGrid>
									<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ApplicationInfoDialog.GCFrequency}"/>
									<abControls:FormattedSelectableTextBlock Arg1="{Binding $parent[Window].Application.ProcessInfo.GCFrequency}" Format="{DynamicResource String/ApplicationInfoDialog.GCFrequency.Format}" Grid.Column="1" TextTrimming="CharacterEllipsis"/>
								</controls:CompactDialogItemGrid>

								<!-- Finalization pending count -->
								<Separator Classes="Dialog_Item_Separator"/>
								<controls:CompactDialogItemGrid>
									<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ApplicationInfoDialog.FinalizationPendingCount}"/>
									<SelectableTextBlock Grid.Column="1" Text="{Binding $parent[Window].Application.ProcessInfo.FinalizationPendingCount}" TextTrimming="CharacterEllipsis"/>
								</controls:CompactDialogItemGrid>
								
							</StackPanel>
							
							<!-- Script info -->
							<StackPanel Name="scriptInfoPanel" IsVisible="False">

								<!-- Running script count -->
								<Separator Classes="Dialog_Item_Separator"/>
								<controls:CompactDialogItemGrid>
									<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ApplicationInfoDialog.RunningScriptCount}"/>
									<SelectableTextBlock Grid.Column="1" Text="{Binding RunningScriptCount, Source={x:Static scripting:ScriptManager.Default}}" TextTrimming="CharacterEllipsis"/>
								</controls:CompactDialogItemGrid>
								
								<!-- Script running loading -->
								<Separator Classes="Dialog_Item_Separator"/>
								<controls:CompactDialogItemGrid>
									<TextBlock Classes="Dialog_TextBlock_Label" Text="{DynamicResource String/ApplicationInfoDialog.ScriptRunningLoading}"/>
									<SelectableTextBlock Grid.Column="1" Text="{Binding ScriptRunningLoading, Source={x:Static scripting:ScriptManager.Default}, Converter={x:Static converters:RatioToPercentageConverter.Default}}" TextTrimming="CharacterEllipsis"/>
								</controls:CompactDialogItemGrid>

							</StackPanel>

						</StackPanel>
					</Border>
					<Separator Classes="Dialog_Separator_Large"/>

					<!-- Activated products -->
					<StackPanel Name="productListSectionPanel">
						<Border Classes="Dialog_ItemsGroup_Header">
							<TextBlock Classes="Dialog_ItemsGroup_Header" Text="{DynamicResource String/ApplicationInfoDialog.Products}"/>
						</Border>
						<Border Classes="Dialog_ItemsGroup_Container">
							<StackPanel Name="productListPanel"/>
						</Border>
						<Separator Classes="Dialog_Separator_Large"/>
					</StackPanel>

					<!-- Assemblies (Header) -->
					<Border Classes="Dialog_ItemsGroup_Header">
						<TextBlock Classes="Dialog_ItemsGroup_Header" Text="{DynamicResource String/ApplicationInfoDialog.Assemblies}"/>
					</Border>
					<Border Classes="Dialog_ItemsGroup_Container">
						<StackPanel>

							<!-- Assemblies -->
							<StackPanel Name="assembliesPanel"/>

						</StackPanel>
					</Border>
					<Separator Classes="Dialog_Separator_Large"/>
					
					<!-- Other information -->
					<Border Classes="Dialog_ItemsGroup_Header">
						<TextBlock Classes="Dialog_ItemsGroup_Header" Text="{DynamicResource String/ApplicationInfoDialog.Other}"/>
					</Border>
					<Border Classes="Dialog_ItemsGroup_Container">
						<StackPanel>

							<!-- Donate -->
							<StackPanel IsVisible="{Binding PayPalUri, Converter={x:Static ObjectConverters.IsNotNull}}">
								<StackPanel Classes="Dialog_IconText_Container">
									<Image Classes="Dialog_Icon" Source="{StaticResource Image/Icon.PayPal.Outline.Colored}"/>
									<abControls:LinkTextBlock Classes="Dialog_Icon_LinkTextBlock" Text="{DynamicResource String/ApplicationInfoDialog.DonateWithPayPal}" Uri="{Binding PayPalUri}"/>
								</StackPanel>
								<Separator Classes="Dialog_Separator_Small"/>
							</StackPanel>

							<!-- Website -->
							<StackPanel IsVisible="{Binding WebsiteUri, Converter={x:Static ObjectConverters.IsNotNull}}">
								<StackPanel Classes="Dialog_IconText_Container">
									<Image Classes="Dialog_Icon" Source="{StaticResource Image/Icon.Website}"/>
									<abControls:FormattedLinkTextBlock Classes="Dialog_Icon_LinkTextBlock" Arg1="{Binding Application.Name}" Format="{DynamicResource String/ApplicationInfoDialog.Website}" Uri="{Binding WebsiteUri}"/>
								</StackPanel>
								<Separator Classes="Dialog_Separator_Small"/>
							</StackPanel>

							<!-- User agreement -->
							<StackPanel x:CompileBindings="False" IsVisible="{Binding $parent[Window].HasUserAgreement}">
								<StackPanel Classes="Dialog_IconText_Container">
									<Image Classes="Dialog_Icon" Source="{StaticResource Image/Icon.UserAgreement.Outline}"/>
									<abControls:LinkTextBlock Classes="Dialog_Icon_LinkTextBlock" Command="{Binding $parent[Window].ShowUserAgreement}" Text="{DynamicResource String/Common.UserAgreement.WithDialog}"/>
								</StackPanel>
								<Separator Classes="Dialog_Separator_Small"/>
							</StackPanel>

							<!-- Privacy policy -->
							<StackPanel x:CompileBindings="False" IsVisible="{Binding $parent[Window].HasPrivacyPolicy}">
								<StackPanel Classes="Dialog_IconText_Container">
									<Image Classes="Dialog_Icon" Source="{StaticResource Image/Icon.PrivacyPolicy.Outline}"/>
									<abControls:LinkTextBlock Classes="Dialog_Icon_LinkTextBlock" Command="{Binding $parent[Window].ShowPrivacyPolicy}" Text="{DynamicResource String/Common.PrivacyPolicy.WithDialog}"/>
								</StackPanel>
								<Separator Classes="Dialog_Separator_Small"/>
							</StackPanel>

							<!-- External dependencies -->
							<StackPanel x:CompileBindings="False" IsVisible="{Binding $parent[Window].HasExternalDependencies}">
								<StackPanel Classes="Dialog_IconText_Container">
									<Image Classes="Dialog_Icon" Source="{StaticResource Image/Icon.Dependencies}"/>
									<abControls:LinkTextBlock Classes="Dialog_Icon_LinkTextBlock" Command="{Binding $parent[Window].ShowExternalDependencies}" Text="{DynamicResource String/ApplicationInfoDialog.ExternalDependencies}"/>
								</StackPanel>
								<Separator Classes="Dialog_Separator_Small"/>
							</StackPanel>

							<!-- Restart in debug mode -->
							<StackPanel x:CompileBindings="False" IsVisible="{Binding !$parent[Window].Application.IsDebugMode}">
								<StackPanel Classes="Dialog_IconText_Container">
									<Image Classes="Dialog_Icon" Source="{StaticResource Image/Icon.Debug.Outline}"/>
									<abControls:LinkTextBlock Classes="Dialog_Icon_LinkTextBlock" Command="{Binding $parent[Window].RestartInDebugMode}" Text="{DynamicResource String/ApplicationInfoDialog.RestartInDebugMode}"/>
								</StackPanel>
								<Separator Classes="Dialog_Separator_Small"/>
							</StackPanel>

							<!-- Export logs -->
							<StackPanel Classes="Dialog_IconText_Container">
								<Image Classes="Dialog_Icon" Source="{StaticResource Image/Icon.Export}"/>
								<abControls:LinkTextBlock x:CompileBindings="False" Classes="Dialog_Icon_LinkTextBlock" Command="{Binding $parent[Window].ExportLogs}" Text="{DynamicResource String/ApplicationInfoDialog.ExportAppLogs}"/>
							</StackPanel>
							
							<!-- Take memory snapshot -->
							<StackPanel x:CompileBindings="False" IsVisible="{Binding $parent[Window].Application.IsDebugMode}">
								<Separator Classes="Dialog_Separator_Small"/>
								<StackPanel Classes="Dialog_IconText_Container">
									<Image Classes="Dialog_Icon" Source="{StaticResource Image/Icon.Memory.Outline}"/>
									<abControls:LinkTextBlock Classes="Dialog_Icon_LinkTextBlock" Command="{Binding $parent[Window].TakeMemorySnapshot}" Text="{DynamicResource String/Common.TakeMemorySnapshot.WithDialog}"/>
								</StackPanel>
							</StackPanel>

						</StackPanel>
					</Border>

				</StackPanel>
			</Panel>
		</ScrollViewer>

	</DockPanel>

</Window>
