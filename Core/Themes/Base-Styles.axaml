<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:abControls="using:CarinaStudio.Controls"
        xmlns:abConverters="using:CarinaStudio.Data.Converters"
		xmlns:aConverters="using:Avalonia.Data.Converters"
		xmlns:controls="using:CarinaStudio.AppSuite.Controls"
		xmlns:converters="using:CarinaStudio.AppSuite.Converters"
		xmlns:input="using:CarinaStudio.AppSuite.Input"
		xmlns:md="using:Markdown.Avalonia">

	<!-- AddTabItemButton -->
	<Style Selector="Button.AddTabItem">
		<Setter Property="Background" Value="{DynamicResource Brush/TabItem.Header.Background}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushTransparent}"/>
		<Setter Property="Height" Value="{DynamicResource Double/AddTabItemButton.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/AddTabItemButton.Padding}"/>
		<Setter Property="ToolTip.Tip" Value="{DynamicResource String/Common.CreateTab.WithGesture}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/AddTabItemButton.Size}"/>
	</Style>
	<Style Selector="Button.AddTabItem:disabled">
		<Setter Property="IsHitTestVisible" Value="False"/>
	</Style>
	<Style Selector="Button.AddTabItem:disabled /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{x:Null}"/>
	</Style>
	<Style Selector="Button.AddTabItem:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/TabItem.Header.Background.PointerOver}"/>
	</Style>
	<Style Selector="Button.AddTabItem:pressed /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/TabItem.Header.Background.Selected}"/>
	</Style>
	
	<!-- Button -->
	<Style Selector="Button">
		<Setter Property="BorderThickness" Value="{DynamicResource Thickness/Button.Border}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style Selector=":is(Image).Button_DropDownIcon">
		<Setter Property="Height" Value="{DynamicResource Double/Button.DropDownIcon.Size}"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Button.DropDownIcon.Margin}"/>
		<Setter Property="Stretch" Value="Uniform"/>
		<Setter Property="StretchDirection" Value="Both"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/Button.DropDownIcon.Size}"/>
	</Style>
	<Style Selector=":is(Image).Button_DropDownIcon:disabled">
		<Setter Property="Opacity" Value="{DynamicResource Double/Icon.Opacity.Disabled}"/>
	</Style>
	<Style Selector=":is(Image).Button_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/Button.Icon.Size}"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Button.Icon.Margin}"/>
		<Setter Property="Stretch" Value="Uniform"/>
		<Setter Property="StretchDirection" Value="Both"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/Button.Icon.Size}"/>
	</Style>
	<Style Selector=":is(Image).Button_Icon:disabled">
		<Setter Property="Opacity" Value="{DynamicResource Double/Icon.Opacity.Disabled}"/>
	</Style>
	<Style Selector="Panel.Button_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/Button.Icon.Size}"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Button.Icon.Margin}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/Button.Icon.Size}"/>
	</Style>
	<Style Selector=":is(TextBlock).Button_Text">
		<Setter Property="TextTrimming" Value="CharacterEllipsis"/>
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>

	<!-- ButtonSpinner -->
	<Style Selector="ButtonSpinner /template/ RepeatButton">
		<Setter Property="Template">
			<ControlTemplate>
				<Border x:Name="PART_Root"
					Background="{TemplateBinding Background}"
					BorderBrush="{TemplateBinding BorderBrush}"
					BorderThickness="{TemplateBinding BorderThickness}"
					CornerRadius="{TemplateBinding CornerRadius}"
					Padding="{TemplateBinding Padding}">

					<Viewbox 
						Height="{DynamicResource Double/ButtonSpinner.Button.Icon.Size}"
						HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						Stretch="Uniform" 
						StretchDirection="DownOnly"
						VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
						Width="{DynamicResource Double/ButtonSpinner.Button.Icon.Size}">

						<ContentPresenter
							Content="{TemplateBinding Content}"
							ContentTemplate="{TemplateBinding ContentTemplate}"/>
					</Viewbox>
				</Border>
			</ControlTemplate>
		</Setter>
	</Style>
	<Style Selector="ButtonSpinner /template/ RepeatButton:pointerover">
		<Setter Property="Background" Value="{DynamicResource RepeatButtonBackgroundPointerOver}" />
    </Style>
    <Style Selector="ButtonSpinner /template/ RepeatButton:pressed">
		<Setter Property="Background" Value="{DynamicResource RepeatButtonBackgroundPressed}" />
    </Style>
    <Style Selector="ButtonSpinner /template/ RepeatButton:disabled">
		<Setter Property="Background" Value="{DynamicResource RepeatButtonBackgroundDisabled}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource RepeatButtonForegroundDisabled}" />
    </Style>
	<Style Selector="ButtonSpinner[ButtonSpinnerLocation=Left] /template/ RepeatButton#PART_DecreaseButton">
		<Setter Property="BorderThickness" Value="{Binding $parent[ButtonSpinner].BorderThickness, Converter={x:Static converters:ThicknessConverters.Right}}"/>
	</Style>
	<Style Selector="ButtonSpinner[ButtonSpinnerLocation=Left] /template/ RepeatButton#PART_IncreaseButton">
		<Setter Property="BorderThickness" Value="{Binding $parent[ButtonSpinner].BorderThickness, Converter={x:Static converters:ThicknessConverters.Right}}"/>
		<Setter Property="CornerRadius">
			<MultiBinding Converter="{x:Static converters:CornerRadiusConverters.InnerLeft}">
				<TemplateBinding Property="BorderThickness"/>
				<TemplateBinding Property="CornerRadius"/>
			</MultiBinding>
		</Setter>
	</Style>
	<Style Selector="ButtonSpinner[ButtonSpinnerLocation=Right] /template/ RepeatButton#PART_DecreaseButton">
		<Setter Property="BorderThickness" Value="{Binding $parent[ButtonSpinner].BorderThickness, Converter={x:Static converters:ThicknessConverters.Left}}"/>
		<Setter Property="CornerRadius">
			<MultiBinding Converter="{x:Static converters:CornerRadiusConverters.InnerRight}">
				<TemplateBinding Property="BorderThickness"/>
				<TemplateBinding Property="CornerRadius"/>
			</MultiBinding>
		</Setter>
	</Style>
	<Style Selector="ButtonSpinner[ButtonSpinnerLocation=Right] /template/ RepeatButton#PART_IncreaseButton">
		<Setter Property="BorderThickness" Value="{Binding $parent[ButtonSpinner].BorderThickness, Converter={x:Static converters:ThicknessConverters.Left}}"/>
	</Style>

	<!-- BrowseButton -->
	<Style Selector="Border.BrowseButtonIcon">
		<Setter Property="Height" Value="{DynamicResource Double/BrowseButton.Icon.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/BrowseButton.Icon.Size}"/>
	</Style>
	<Style Selector="Button.BrowseButton">
		<Setter Property="Content" Value="…"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/BrowseButton.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/BrowseButton.Padding}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector=":is(Image).BrowseButtonIcon">
		<Setter Property="Height" Value="{DynamicResource Double/BrowseButton.Icon.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Stretch" Value="Uniform"/>
		<Setter Property="StretchDirection" Value="Both"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/BrowseButton.Icon.Size}"/>
	</Style>
	<Style Selector=":is(Image).BrowseButtonIcon:disabled">
		<Setter Property="Opacity" Value="{DynamicResource Double/Icon.Opacity.Disabled}"/>
	</Style>
	<Style Selector="Panel.BrowseButtonIcon">
		<Setter Property="Height" Value="{DynamicResource Double/BrowseButton.Icon.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/BrowseButton.Icon.Size}"/>
	</Style>
	<Style Selector="ToggleButton.BrowseButton">
		<Setter Property="Content" Value="…"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/BrowseButton.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/BrowseButton.Padding}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>

	<!-- CaptionButtons -->
	<Style Selector="Button.CaptionButton">
		<Setter Property="Background" Value="{DynamicResource Brush/CaptionButtons.Button.Background.PointerOver}" />
		<Setter Property="BorderBrush" Value="{DynamicResource Brush/CaptionButtons.Button.Background.Pressed}" />
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="Width" Value="45"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<ControlTemplate>
				<ContentPresenter Name="PART_ContentPresenter"
								Background="Transparent"
								Content="{TemplateBinding Content}"/>
			</ControlTemplate>
		</Setter>
	</Style>
	<Style Selector="Button.CaptionButton:pointerover /template/ ContentPresenter">
		<Setter Property="Background" Value="{TemplateBinding Background}" />
	</Style>
	<Style Selector="Button.CaptionButton:pressed /template/ ContentPresenter">
		<Setter Property="Background" Value="{TemplateBinding BorderBrush}" />
	</Style>
	<Style Selector="Button.CaptionButton_Close">
		<Setter Property="Background" Value="#ffe81123" />
		<Setter Property="BorderBrush" Value="#fff1707a" />
	</Style>
	<Style Selector="CaptionButtons">
		<Setter Property="Template">
			<ControlTemplate>
				<StackPanel Spacing="2" VerticalAlignment="Stretch" TextElement.FontSize="10" Orientation="Horizontal">
				  <Button x:Name="PART_FullScreenButton"
						  Classes="CaptionButton"
						  IsVisible="False">
					<Viewbox Width="11" Margin="2">
					  <Path Name="FullScreenButtonPath"
							Stretch="UniformToFill"
							Fill="{TemplateBinding Foreground}"
							Data="M2048 2048v-819h-205v469l-1493 -1493h469v-205h-819v819h205v-469l1493 1493h-469v205h819z" />
					</Viewbox>
				  </Button>
				  <Button x:Name="PART_MinimizeButton"
						  Classes="CaptionButton">
					<Viewbox Width="11" Margin="2">
					  <Path Stretch="UniformToFill"
							Fill="{TemplateBinding Foreground}"
							Data="M2048 1229v-205h-2048v205h2048z" />
					</Viewbox>
				  </Button>
				  <Button x:Name="PART_RestoreButton"
						  Classes="CaptionButton">
					<Viewbox Width="11" Margin="2">
					  <Viewbox.RenderTransform>
						<RotateTransform Angle="-90" />
					  </Viewbox.RenderTransform>
					  <Path Name="RestoreButtonPath"
							Stretch="UniformToFill"
							Fill="{TemplateBinding Foreground}"
							Data="M2048 2048v-2048h-2048v2048h2048zM1843 1843h-1638v-1638h1638v1638z"/>
					</Viewbox>
				  </Button>
				  <Button x:Name="PART_CloseButton"
						  Classes="CaptionButton CaptionButton_Close">
					<Viewbox Width="11" Margin="2">
					  <Path Stretch="UniformToFill"
							Fill="{TemplateBinding Foreground}"
							Data="M1169 1024l879 -879l-145 -145l-879 879l-879 -879l-145 145l879 879l-879 879l145 145l879 -879l879 879l145 -145z" />
					</Viewbox>
				  </Button>
				</StackPanel>
			</ControlTemplate>
		</Setter>
	</Style>

	<!-- ComboBox -->
	<Style Selector="ComboBox">
		<Setter Property="BorderThickness" Value="{DynamicResource Thickness/Control.Border}"/>
		<Setter Property="Template">
			<ControlTemplate>
				<DataValidationErrors>
					<Grid ColumnDefinitions="*,26">
						<Border x:Name="Background"
								Grid.Column="0"
								Grid.ColumnSpan="2"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{TemplateBinding CornerRadius}"
								MinWidth="{DynamicResource ComboBoxThemeMinWidth}" />
						<Border x:Name="HighlightBackground"
								Grid.Column="0"
								Grid.ColumnSpan="2"
								Background="{DynamicResource ComboBoxBackgroundUnfocused}"
								BorderBrush="{DynamicResource ComboBoxBackgroundBorderBrushUnfocused}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="{TemplateBinding CornerRadius}"
								IsVisible="False"/>
						<TextBlock x:Name="PlaceholderTextBlock"
								Grid.Column="0"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Margin="{TemplateBinding Padding}"
								Text="{TemplateBinding PlaceholderText}"
								Foreground="{TemplateBinding PlaceholderForeground}"
								IsVisible="{TemplateBinding SelectionBoxItem, Converter={x:Static ObjectConverters.IsNull}}" />
						<ContentControl x:Name="ContentPresenter"
										Content="{TemplateBinding SelectionBoxItem}"
										ContentTemplate="{TemplateBinding ItemTemplate}"
										Grid.Column="0"
										Margin="{TemplateBinding Padding}"
										HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalAlignment="Center"
										VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />

						<Border x:Name="DropDownOverlay"
								Grid.Column="1"
								Background="Transparent"
								Margin="0,1,1,1"
								Width="30"
								IsVisible="False"
								HorizontalAlignment="Right" />

						<Image x:Name="DropDownGlyph"
						       Classes="Icon"
						       Grid.Column="1"
						       UseLayoutRounding="False"
						       Height="12"
						       Width="12"
						       Margin="0,0,10,0"
						       HorizontalAlignment="Right"
						       VerticalAlignment="Center">
							<DrawingImage>
								<GeometryDrawing Brush="{DynamicResource ComboBoxDropDownGlyphForeground}" Geometry="{DynamicResource Geometry/Icon.DropDown.Down}"/>
							</DrawingImage>
						</Image>

						<Popup Name="PART_Popup"
							WindowManagerAddShadowHint="False"
							IsOpen="{TemplateBinding IsDropDownOpen, Mode=TwoWay}"
							MinWidth="{Binding Bounds.Width, RelativeSource={RelativeSource TemplatedParent}}"
							MaxHeight="{TemplateBinding MaxDropDownHeight}"
							PlacementTarget="Background"
							IsLightDismissEnabled="True"
							InheritsTransform="True">
							<Border x:Name="PopupBorder"
							        Background="{DynamicResource ComboBoxDropDownBackground}"
							        BorderBrush="{DynamicResource ComboBoxDropDownBorderBrush}"
							        BorderThickness="{DynamicResource ComboBoxDropdownBorderThickness}"
							        Padding="{DynamicResource ComboBoxDropdownBorderPadding}"
							        HorizontalAlignment="Stretch"
							        CornerRadius="{DynamicResource OverlayCornerRadius}">
								<ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
								              VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
									<ItemsPresenter Name="PART_ItemsPresenter"
									                Margin="{DynamicResource ComboBoxDropdownContentMargin}"
									                ItemsPanel="{TemplateBinding ItemsPanel}" />
								</ScrollViewer>
							</Border>
						</Popup>
					</Grid>
				</DataValidationErrors>
			</ControlTemplate>
		</Setter>
	</Style>

	<!-- ComboBoxItem -->
	<Style Selector="ComboBoxItem">
		<Setter Property="CornerRadius" Value="{DynamicResource CornerRadius/ComboBoxItem}"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/ComboBoxItem.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/ComboBoxItem.Padding}"/>
	</Style>
	<Style Selector="Border.ComboBoxItem_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/ComboBoxItem.Icon.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/ComboBoxItem.Icon.Margin}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/ComboBoxItem.Icon.Size}"/>
	</Style>
	<Style Selector=":is(Image).ComboBoxItem_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/ComboBoxItem.Icon.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/ComboBoxItem.Icon.Margin}"/>
		<Setter Property="Stretch" Value="Uniform"/>
		<Setter Property="StretchDirection" Value="Both"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/ComboBoxItem.Icon.Size}"/>
	</Style>
	<Style Selector=":is(Image).ComboBoxItem_Icon:disabled">
		<Setter Property="Opacity" Value="{DynamicResource Double/Icon.Opacity.Disabled}"/>
	</Style>
	<Style Selector="Panel.ComboBoxItem_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/ComboBoxItem.Icon.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/ComboBoxItem.Icon.Margin}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/ComboBoxItem.Icon.Size}"/>
	</Style>
	<Style Selector="TextBlock.ComboBoxItem_TextBlock">
		<Setter Property="TextTrimming" Value="CharacterEllipsis"/>
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	
	<!-- ContextMenu -->
	<Style Selector="ContextMenu /template/ Border">
		<Setter Property="BoxShadow" Value="{DynamicResource BoxShadows/Shadow}"/>
		<Setter Property="Margin" Value="15"/>
	</Style>

	<!-- DatePicker -->
	<Style Selector="DatePicker">
		<Setter Property="BorderThickness" Value="{DynamicResource Thickness/Control.Border}"/>
		<Setter Property="DayFormat" Value="{DynamicResource String/DatePicker.DayFormat}"/>
		<Setter Property="MonthFormat" Value="{DynamicResource String/DatePicker.MonthFormat}"/>
		<Setter Property="YearFormat" Value="{DynamicResource String/DatePicker.YearFormat}"/>
	</Style>

	<!-- DateTimeTextBox -->
	<Style Selector="TextBox:dateTimeTextBox">
		<Setter Property="Watermark" Value="{DynamicResource String/DateTimeTextBox.Watermark}"/>
	</Style>

	<!-- Dialog -->
	<Style Selector="Border.Dialog_ContentPanel">
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ContentPanel.Padding}"/>
	</Style>
	<Style Selector="Border.Dialog_ContentPanel_Indented">
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ContentPanel.Margin.Indented}"/>
	</Style>
	<Style Selector="Border.Dialog_ContentPanel_WithItemsGroups">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ContentPanel.Padding.WithItemsGroups}"/>
	</Style>
	<Style Selector="Border.Dialog_ContentPanel_WithItemsGroups_Right">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ContentPanel.Padding.WithItemsGroups.Right}"/>
	</Style>
	<Style Selector="Border.Dialog_FullWidthControl_Container">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.FullWidthControl.Margin}"/>
	</Style>
	<Style Selector="Border.Dialog_ControlButtonsPanel">
		<Setter Property="Background" Value="{DynamicResource Brush/Dialog.ControlButtonsPanel.Background}"/>
		<Setter Property="DockPanel.Dock" Value="Bottom"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/Dialog.ControlButtonsPanel.Padding}"/>
		<Setter Property="VerticalAlignment" Value="Bottom"/>
	</Style>
	<Style Selector="Border.Dialog_Item_Container">
		<Setter Property="ClipToBounds" Value="True"/>
		<Setter Property="MinHeight" Value="{DynamicResource Double/Dialog.Item.MinHeight}"/>
	</Style>
	<Style Selector="Border.Dialog_Item_Container_Small">
		<Setter Property="ClipToBounds" Value="True"/>
		<Setter Property="MinHeight" Value="{DynamicResource Double/Dialog.Item.MinHeight.Small}"/>
	</Style>
	<Style Selector="Border.Dialog_ItemsGroup_Container">
		<Setter Property="Background" Value="{DynamicResource Brush/Dialog.ItemsGroup.Background}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource Brush/Dialog.ItemsGroup.Border}"/>
		<Setter Property="BorderThickness" Value="{DynamicResource Thickness/Dialog.ItemsGroup.Border}"/>
		<Setter Property="CornerRadius" Value="{DynamicResource CornerRadius/Dialog.ItemsGroup}"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ItemsGroup.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/Dialog.ItemsGroup.Padding}"/>
	</Style>
	<Style Selector="Border.Dialog_ItemsGroup_Header">
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.TextBlock.Margin.ItemsGroupHeader}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/Dialog.TextBlock.Padding.ItemsGroupHeader}"/>
	</Style>
	<Style Selector="Border.Dialog_TextBlock_Header1">
		<Setter Property="Background" Value="{DynamicResource Brush/Dialog.TextBlock.Background.Header1}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource Brush/Dialog.TextBlock.Border.Header1}"/>
		<Setter Property="BorderThickness" Value="{DynamicResource Thickness/Dialog.TextBlock.Border.Header1}"/>
		<Setter Property="CornerRadius" Value="{DynamicResource CornerRadius/Dialog.TextBlock.Header1}"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.TextBlock.Margin.Header1}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/Dialog.TextBlock.Padding.Header1}"/>
	</Style>
	<Style Selector="Border.Dialog_TextBlock_Header2">
		<Setter Property="Background" Value="{DynamicResource Brush/Dialog.TextBlock.Background.Header2}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource Brush/Dialog.TextBlock.Border.Header2}"/>
		<Setter Property="BorderThickness" Value="{DynamicResource Thickness/Dialog.TextBlock.Border.Header2}"/>
		<Setter Property="CornerRadius" Value="{DynamicResource CornerRadius/Dialog.TextBlock.Header2}"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.TextBlock.Margin.Header2}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/Dialog.TextBlock.Padding.Header2}"/>
	</Style>
	<Style Selector="Button.Dialog_AccentControlButton">
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ControlButton.Margin}"/>
		<Setter Property="MinWidth" Value="{DynamicResource Double/Dialog.ControlButton.MinWidth}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/Dialog.ControlButton.Padding}"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style Selector="Button.Dialog_AccentControlButton:focus /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource AccentButtonBackground}" />
		<Setter Property="BorderBrush" Value="{DynamicResource AccentButtonBorderBrush}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource AccentButtonForeground}" />
	</Style>
	<Style Selector="Button.Dialog_AccentControlButton:focus:disabled /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource AccentButtonBackgroundDisabled}" />
		<Setter Property="BorderBrush" Value="{DynamicResource AccentButtonBorderBrush}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource AccentButtonForeground}" />
	</Style>
	<Style Selector="Button.Dialog_AccentControlButton:focus:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource AccentButtonBackgroundPointerOver}" />
		<Setter Property="BorderBrush" Value="{DynamicResource AccentButtonBorderBrushPointerOver}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource AccentButtonForegroundPointerOver}" />
	</Style>
	<Style Selector="Button.Dialog_AccentControlButton:focus:pressed /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPressed}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource ButtonForegroundPressed}" />
	</Style>
	<Style Selector="Button.Dialog_ControlButton">
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ControlButton.Margin}"/>
		<Setter Property="MinWidth" Value="{DynamicResource Double/Dialog.ControlButton.MinWidth}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/Dialog.ControlButton.Padding}"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style Selector="Button.Dialog_IconControlButton">
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ControlButton.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/Dialog.IconControlButton.Padding}"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style Selector="Button.Dialog_Item_Button">
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="Button.Dialog_ListActionButton">
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ListActionButton.Margin}"/>
		<Setter Property="MinWidth" Value="{DynamicResource Double/Dialog.ListActionButton.MinWidth}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/Dialog.ListActionButton.Padding}"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style Selector="CheckBox.Dialog_CheckBox">
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.Control.Margin}"/>
		<Setter Property="TextBlock.FontSize" Value="{DynamicResource Double/Dialog.TextBlock.FontSize}"/>
	</Style>
	<Style Selector="ComboBox.Dialog_ComboBox">
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.Control.Margin}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="ComboBox.Dialog_Item_ComboBox">
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="MinWidth" Value="{DynamicResource Double/Dialog.Control.MinWidth}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="DatePicker.Dialog_DatePicker">
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.Control.Margin}"/>
		<Setter Property="MinWidth" Value="{DynamicResource Double/Dialog.Control.MinWidth}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="DockPanel.Dialog_ContentPanel">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ContentPanel.Padding}"/>
	</Style>
	<Style Selector="Expander.Dialog_Expander">
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.Control.Margin}"/>
	</Style>
	<Style Selector="Grid.Dialog_ContentPanel">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ContentPanel.Padding}"/>
	</Style>
	<Style Selector="Grid.Dialog_ContentPanel_Indented">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ContentPanel.Margin.Indented}"/>
	</Style>
	<Style Selector="Grid.Dialog_ContentPanel_WithHeader">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ContentPanel.Padding.WithHeader}"/>
	</Style>
	<Style Selector="Grid.Dialog_ContentPanel_WithItemsGroups">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ContentPanel.Padding.WithItemsGroups}"/>
	</Style>
	<Style Selector="Grid.Dialog_ContentPanel_WithItemsGroups_Right">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ContentPanel.Padding.WithItemsGroups.Right}"/>
	</Style>
	<Style Selector="Grid.Dialog_FullWidthControl_Container">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.FullWidthControl.Margin}"/>
	</Style>
	<Style Selector="Grid.Dialog_IconText_Container">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.IconText.Margin}"/>
	</Style>
	<Style Selector="Grid.Dialog_IconText_Container_Description">
	</Style>
	<Style Selector="Grid.Dialog_Item_Container">
		<Setter Property="ClipToBounds" Value="True"/>
		<Setter Property="MinHeight" Value="{DynamicResource Double/Dialog.Item.MinHeight}"/>
	</Style>
	<Style Selector="Grid.Dialog_Item_Container_Small">
		<Setter Property="ClipToBounds" Value="True"/>
		<Setter Property="MinHeight" Value="{DynamicResource Double/Dialog.Item.MinHeight.Small}"/>
	</Style>
	<Style Selector=":is(Image).Dialog_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/Dialog.Icon.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.Icon.Margin}"/>
		<Setter Property="Stretch" Value="Uniform"/>
		<Setter Property="StretchDirection" Value="Both"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/Dialog.Icon.Size}"/>
	</Style>
	<Style Selector=":is(Image).Dialog_Icon:disabled">
		<Setter Property="Opacity" Value="{DynamicResource Double/Icon.Opacity.Disabled}"/>
	</Style>
	<Style Selector=":is(Image).Dialog_Icon_Description">
		<Setter Property="Height" Value="{DynamicResource Double/Dialog.Icon.Size.Description}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.Icon.Margin.Description}"/>
		<Setter Property="Stretch" Value="Uniform"/>
		<Setter Property="StretchDirection" Value="Both"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/Dialog.Icon.Size.Description}"/>
	</Style>
	<Style Selector=":is(Image).Dialog_Icon_Description:disabled">
		<Setter Property="Opacity" Value="{DynamicResource Double/Icon.Opacity.Disabled}"/>
	</Style>
	<Style Selector=":is(Image).Dialog_Icon_Large">
		<Setter Property="Height" Value="{DynamicResource Double/Dialog.Icon.Size.Large}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.Icon.Margin.Large}"/>
		<Setter Property="Stretch" Value="Uniform"/>
		<Setter Property="StretchDirection" Value="Both"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/Dialog.Icon.Size.Large}"/>
	</Style>
	<Style Selector=":is(Image).Dialog_Icon_Large:disabled">
		<Setter Property="Opacity" Value="{DynamicResource Double/Icon.Opacity.Disabled}"/>
	</Style>
	<Style Selector=":is(Image).Dialog_IconControlButton_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/Dialog.IconControlButton.Icon.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Stretch" Value="Uniform"/>
		<Setter Property="StretchDirection" Value="Both"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/Dialog.IconControlButton.Icon.Size}"/>
	</Style>
	<Style Selector="Line.Dialog_Item_Separator">
		<Setter Property="EndPoint" Value="6,0"/>
		<Setter Property="Height" Value="1"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ItemSeparator.Margin}"/>
		<Setter Property="StartPoint" Value="0,0"/>
		<Setter Property="Stretch" Value="Fill"/>
		<Setter Property="Stroke" Value="{DynamicResource Brush/Dialog.ItemSeparator}"/>
		<Setter Property="StrokeThickness" Value="{DynamicResource Double/Dialog.ItemSeparator.Stroke}"/>
	</Style>
	<Style Selector="Line.Dialog_Item_Separator_Inner">
		<Setter Property="EndPoint" Value="6,0"/>
		<Setter Property="Height" Value="1"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ItemSeparator.Margin.Inner}"/>
		<Setter Property="StartPoint" Value="0,0"/>
		<Setter Property="Stretch" Value="Fill"/>
		<Setter Property="Stroke" Value="{DynamicResource Brush/Dialog.ItemSeparator}"/>
		<Setter Property="StrokeDashArray" Value="4,2"/>
		<Setter Property="StrokeDashOffset" Value="0"/>
		<Setter Property="StrokeThickness" Value="{DynamicResource Double/Dialog.ItemSeparator.Stroke}"/>
	</Style>
	<Style Selector="abControls|LinkTextBlock.Dialog_Icon_LinkTextBlock">
		<Setter Property="FontSize" Value="{DynamicResource Double/Dialog.TextBlock.FontSize}"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="abControls|LinkTextBlock.Dialog_LinkTextBlock">
		<Setter Property="FontSize" Value="{DynamicResource Double/Dialog.TextBlock.FontSize}"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.TextBlock.Margin}"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
	</Style>
	<Style Selector="abControls|LinkTextBlock.Dialog_LinkTextBlock_Description">
		<Setter Property="FontSize" Value="{DynamicResource Double/Dialog.TextBlock.FontSize.Description}"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.TextBlock.Margin.Description}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/Dialog.TextBlock.Padding.Description}"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
	</Style>
	<Style Selector="ListBox.Dialog_Item_ListBox">
		<Setter Property="Background" Value="{x:Static Brushes.Transparent}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ListBox.Margin}"/>
		<Setter Property="Padding" Value="0"/>
	</Style>
	<Style Selector="ListBox.Dialog_ListBox">
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ListBox.Margin}"/>
	</Style>
	<Style Selector="NumericUpDown.Dialog_NumericUpDown">
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.Control.Margin}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="NumericUpDown.Dialog_Item_NumericUpDown">
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="MinWidth" Value="{DynamicResource Double/Dialog.Control.MinWidth}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="Panel.Dialog_ContentPanel">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ContentPanel.Padding}"/>
	</Style>
	<Style Selector="Panel.Dialog_ContentPanel_WithHeader">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ContentPanel.Padding.WithHeader}"/>
	</Style>
	<Style Selector="Panel.Dialog_ContentPanel_WithItemsGroups">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ContentPanel.Padding.WithItemsGroups}"/>
	</Style>
	<Style Selector="Panel.Dialog_ContentPanel_WithItemsGroups_Right">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ContentPanel.Padding.WithItemsGroups.Right}"/>
	</Style>
	<Style Selector="Panel.Dialog_FullWidthControl_Container">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.FullWidthControl.Margin}"/>
	</Style>
	<Style Selector="Panel.Dialog_Item_Container">
		<Setter Property="ClipToBounds" Value="True"/>
		<Setter Property="MinHeight" Value="{DynamicResource Double/Dialog.Item.MinHeight}"/>
	</Style>
	<Style Selector="Panel.Dialog_Item_Container_Small">
		<Setter Property="ClipToBounds" Value="True"/>
		<Setter Property="MinHeight" Value="{DynamicResource Double/Dialog.Item.MinHeight.Small}"/>
	</Style>
	<Style Selector="RadioButton.Dialog_RadioButton">
		<Setter Property="HorizontalAlignment" Value="Left"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.Control.Margin}"/>
		<Setter Property="TextBlock.FontSize" Value="{DynamicResource Double/Dialog.TextBlock.FontSize}"/>
	</Style>
	<Style Selector="ScrollViewer.Dialog_ContentPanel">
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
	</Style>
	<Style Selector="Separator.Dialog_ControlButton_Separator">
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="Width" Value="{DynamicResource Double/Dialog.ControlButton.Separator.Width}"/>
	</Style>
	<Style Selector="Separator.Dialog_Item_Separator">
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource Brush/Dialog.ItemSeparator}"/>
		<Setter Property="BorderThickness" Value="{DynamicResource Thickness/Dialog.ItemSeparator.Border}"/>
		<Setter Property="Height" Value="1"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ItemSeparator.Margin}"/>
	</Style>
	<Style Selector="Separator.Dialog_Separator">
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="Height" Value="{DynamicResource Double/Dialog.Separator.Height}"/>
		<Setter Property="Width" Value="{DynamicResource Double/Dialog.Separator.Width}"/>
	</Style>
	<Style Selector="Separator.Dialog_Separator_Large">
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="Height" Value="{DynamicResource Double/Dialog.Separator.Height.Large}"/>
		<Setter Property="Width" Value="{DynamicResource Double/Dialog.Separator.Width.Large}"/>
	</Style>
	<Style Selector="Separator.Dialog_Separator_Micro">
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="Height" Value="{DynamicResource Double/Dialog.Separator.Height.Micro}"/>
		<Setter Property="Width" Value="{DynamicResource Double/Dialog.Separator.Width.Micro}"/>
	</Style>
	<Style Selector="Separator.Dialog_Separator_Small">
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="Height" Value="{DynamicResource Double/Dialog.Separator.Height.Small}"/>
		<Setter Property="Width" Value="{DynamicResource Double/Dialog.Separator.Width.Small}"/>
	</Style>
	<Style Selector="Slider.Dialog_Item_Slider">
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="TickPlacement" Value="Outside"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/Dialog.Control.MinWidth}"/>
	</Style>
	<Style Selector="Slider.Dialog_Slider">
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.Control.Margin}"/>
		<Setter Property="TickPlacement" Value="Outside"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="StackPanel.Dialog_ContentPanel">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ContentPanel.Padding}"/>
	</Style>
	<Style Selector="StackPanel.Dialog_ContentPanel_Indented">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ContentPanel.Margin.Indented}"/>
	</Style>
	<Style Selector="StackPanel.Dialog_ContentPanel_WithHeader">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ContentPanel.Padding.WithHeader}"/>
	</Style>
	<Style Selector="StackPanel.Dialog_ContentPanel_WithItemsGroups">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ContentPanel.Padding.WithItemsGroups}"/>
	</Style>
	<Style Selector="StackPanel.Dialog_ContentPanel_WithItemsGroups_Right">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ContentPanel.Padding.WithItemsGroups.Right}"/>
	</Style>
	<Style Selector="StackPanel.Dialog_ControlButtonsPanel">
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="Orientation" Value="Horizontal"/>
	</Style>
	<Style Selector="StackPanel.Dialog_FullWidthControl_Container">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.FullWidthControl.Margin}"/>
	</Style>
	<Style Selector="StackPanel.Dialog_IconText_Container">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.IconText.Margin}"/>
		<Setter Property="Orientation" Value="Horizontal"/>
	</Style>
	<Style Selector="StackPanel.Dialog_IconText_Container_Description">
		<Setter Property="Orientation" Value="Horizontal"/>
	</Style>
	<Style Selector="StackPanel.Dialog_Item_Text_Container">
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector=":is(TextBlock).Dialog_Icon_TextBlock">
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="FontSize" Value="{DynamicResource Double/Dialog.TextBlock.FontSize}"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector=":is(TextBlock).Dialog_Icon_TextBlock_Description">
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="FontSize" Value="{DynamicResource Double/Dialog.TextBlock.FontSize.Description}"/>
		<Setter Property="Foreground" Value="{DynamicResource Brush/Dialog.TextBlock.Foreground.Description}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/Dialog.TextBlock.Padding.Description}"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector=":is(TextBlock).Dialog_Icon_TextBlock_Description_Error">
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="FontSize" Value="{DynamicResource Double/Dialog.TextBlock.FontSize.Description}"/>
		<Setter Property="Foreground" Value="{DynamicResource Brush/Dialog.TextBlock.Foreground.Error}"/>
		<Setter Property="Padding" Value="{DynamicResource Dialog.TextBlock.Padding.Description}"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector=":is(TextBlock).Dialog_Icon_TextBlock_Description_Warning">
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="FontSize" Value="{DynamicResource Double/Dialog.TextBlock.FontSize.Description}"/>
		<Setter Property="Foreground" Value="{DynamicResource Brush/Dialog.TextBlock.Foreground.Warning}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/Dialog.TextBlock.Padding.Description}"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector=":is(TextBlock).Dialog_ItemsGroup_Header">
		<Setter Property="FontSize" Value="{DynamicResource Double/Dialog.TextBlock.FontSize.ItemsGroupHeader}"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector=":is(TextBlock).Dialog_TextBlock">
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="FontSize" Value="{DynamicResource Double/Dialog.TextBlock.FontSize}"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.TextBlock.Margin}"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector=":is(TextBlock).Dialog_TextBlock_Description">
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="FontSize" Value="{DynamicResource Double/Dialog.TextBlock.FontSize.Description}"/>
		<Setter Property="Foreground" Value="{DynamicResource Brush/Dialog.TextBlock.Foreground.Description}"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.TextBlock.Margin.Description}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/Dialog.TextBlock.Padding.Description}"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector=":is(TextBlock).Dialog_TextBlock_Description_Error">
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="FontSize" Value="{DynamicResource Double/Dialog.TextBlock.FontSize.Description}"/>
		<Setter Property="Foreground" Value="{DynamicResource Brush/Dialog.TextBlock.Foreground.Error}"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.TextBlock.Margin.Description}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/Dialog.TextBlock.Padding.Description}"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector=":is(TextBlock).Dialog_TextBlock_Description_Warning">
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="FontSize" Value="{DynamicResource Double/Dialog.TextBlock.FontSize.Description}"/>
		<Setter Property="Foreground" Value="{DynamicResource Brush/Dialog.TextBlock.Foreground.Warning}"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.TextBlock.Margin.Description}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/Dialog.TextBlock.Padding.Description}"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector=":is(TextBlock).Dialog_TextBlock_Header1">
		<Setter Property="FontSize" Value="{DynamicResource Double/Dialog.TextBlock.FontSize.Header1}"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector=":is(TextBlock).Dialog_TextBlock_Header2">
		<Setter Property="FontSize" Value="{DynamicResource Double/Dialog.TextBlock.FontSize.Header2}"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector=":is(TextBlock).Dialog_TextBlock_Label">
		<Setter Property="ClipToBounds" Value="False"/>
		<Setter Property="FontSize" Value="{DynamicResource Double/Dialog.TextBlock.FontSize.Label}"/>
		<!--Setter Property="FontWeight" Value="Bold"/-->
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.TextBlock.Margin.Label}"/>
		<Setter Property="MaxLines" Value="2"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/Dialog.TextBlock.Padding.Label}"/>
		<Setter Property="TextTrimming" Value="CharacterEllipsis"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="TextBox.Dialog_Item_TextBox">
		<Setter Property="Background" Value="{x:Static Brushes.Transparent}"/>
		<Setter Property="BorderBrush" Value="{x:Static Brushes.Transparent}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="MinWidth" Value="{DynamicResource Double/Dialog.Control.MinWidth}"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="TextAlignment" Value="Right"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="TextBox.Dialog_Item_TextBox /template/ Border#PART_BorderElement">
		<Setter Property="Background" Value="{x:Static Brushes.Transparent}"/>
		<Setter Property="BorderBrush" Value="{x:Static Brushes.Transparent}"/>
	</Style>
	<Style Selector="TextBox.Dialog_Item_TextBox:disabled /template/ Border#PART_BorderElement">
		<Setter Property="Background" Value="{x:Static Brushes.Transparent}"/>
		<Setter Property="BorderBrush" Value="{x:Static Brushes.Transparent}"/>
	</Style>
	<Style Selector="TextBox.Dialog_Item_TextBox:focus /template/ Border#PART_BorderElement">
		<Setter Property="Background" Value="{x:Static Brushes.Transparent}"/>
		<Setter Property="BorderBrush" Value="{x:Static Brushes.Transparent}"/>
	</Style>
	<Style Selector="TextBox.Dialog_Item_TextBox:pointerover /template/ Border#PART_BorderElement">
		<Setter Property="Background" Value="{x:Static Brushes.Transparent}"/>
		<Setter Property="BorderBrush" Value="{x:Static Brushes.Transparent}"/>
	</Style>
	<Style Selector="TextBox.Dialog_TextBox">
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.Control.Margin}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="TimePicker.Dialog_TimePicker">
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="MinWidth" Value="{DynamicResource Double/Dialog.Control.MinWidth}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="ToggleButton.Dialog_ControlButton">
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ControlButton.Margin}"/>
		<Setter Property="MinWidth" Value="{DynamicResource Double/Dialog.ControlButton.MinWidth}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/Dialog.ControlButton.Padding}"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style Selector="ToggleButton.Dialog_IconControlButton">
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.ControlButton.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/Dialog.IconControlButton.Padding}"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style Selector="ToggleButton.Dialog_Item_ToggleButton">
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="ToggleSwitch.Dialog_Item_ToggleSwitch">
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="ToggleSwitch.Dialog_ToggleSwitch">
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.Control.Margin}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="TreeView.Dialog_Item_TreeView">
		<Setter Property="Background" Value="{x:Static Brushes.Transparent}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.TreeView.Margin}"/>
		<Setter Property="Padding" Value="0"/>
	</Style>
	<Style Selector="TreeView.Dialog_TreeView">
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/Dialog.TreeView.Margin}"/>
	</Style>
	<Style Selector="Window.Dialog">
		<Setter Property="CanResize" Value="False"/>
		<Setter Property="ShowInTaskbar" Value="False"/>
		<Setter Property="SizeToContent" Value="Height"/>
		<Setter Property="WindowStartupLocation" Value="CenterOwner"/>
	</Style>

	<!-- Expander -->
	<Style Selector="Expander">
		<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
		<Setter Property="BorderThickness" Value="{DynamicResource Thickness/Control.Border}"/>
		<Setter Property="MinHeight" Value="{DynamicResource ExpanderMinHeight}" />
		<Setter Property="Padding" Value="{DynamicResource ExpanderContentPadding}" />
	</Style>
	<Style Selector="Expander /template/ ToggleButton#ExpanderHeader">
		<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
		<Setter Property="Padding" Value="{DynamicResource ExpanderHeaderPadding}" />
		<Setter Property="Template">
			<ControlTemplate>
				<Border x:Name="ToggleButtonBackground" 
						Background="{DynamicResource ButtonBackground}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}">
					<Grid ColumnDefinitions="*,Auto">
						<ContentPresenter x:Name="PART_ContentPresenter"
										Margin="{TemplateBinding Padding}"
										HorizontalAlignment="Left"
										HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
										VerticalContentAlignment="Center"
										Background="Transparent"
										BorderBrush="Transparent"
										BorderThickness="0"
										Content="{TemplateBinding Content}"
										ContentTemplate="{TemplateBinding ContentTemplate}"
										Foreground="{DynamicResource ExpanderForeground}" />
						<Border x:Name="ExpandCollapseChevronBorder"
								Grid.Column="1"
								Width="{DynamicResource Double/Expander.Chevron.Size}"
								Height="{DynamicResource Double/Expander.Chevron.Size}"
								Margin="{DynamicResource Thickness/Expander.Chevron.Margin}"
								RenderTransformOrigin="50%,50%">
							<Viewbox StretchDirection="DownOnly">
								<Path x:Name="ExpandCollapseChevron"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									RenderTransformOrigin="50%,50%"
									Stretch="None"
									Stroke="{DynamicResource ExpanderChevronForeground}"
									StrokeThickness="1" />
							</Viewbox>
							<Border.RenderTransform>
								<RotateTransform />
							</Border.RenderTransform>
						</Border>
					</Grid>
				</Border>
			</ControlTemplate>
		</Setter>
	</Style>
	<Style Selector="Expander:left /template/ ToggleButton#ExpanderHeader">
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
	</Style>
	<Style Selector="Expander:expanded:left /template/ ToggleButton#ExpanderHeader">
		<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadiusRight}" />
		<Setter Property="Margin" Value="0,0,1,0" />
	</Style>
	<Style Selector="Expander:up /template/ ToggleButton#ExpanderHeader">
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Bottom" />
	</Style>
	<Style Selector="Expander:expanded:up /template/ ToggleButton#ExpanderHeader">
		<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadiusBottom}" />
		<Setter Property="Margin" Value="0,1,0,0" />
	</Style>
	<Style Selector="Expander:right /template/ ToggleButton#ExpanderHeader">
		<Setter Property="HorizontalAlignment" Value="Right" />
		<Setter Property="VerticalAlignment" Value="Stretch" />
	</Style>
	<Style Selector="Expander:expanded:right /template/ ToggleButton#ExpanderHeader">
		<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadiusLeft}" />
		<Setter Property="Margin" Value="1,0,0,0" />
	</Style>
	<Style Selector="Expander:down /template/ ToggleButton#ExpanderHeader">
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="VerticalAlignment" Value="Top" />
	</Style>
	<Style Selector="Expander:expanded:down /template/ ToggleButton#ExpanderHeader">
		<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadiusTop}" />
		<Setter Property="Margin" Value="0,0,0,1" />
	</Style>
	<Style Selector="Expander /template/ ToggleButton#ExpanderHeader:disabled /template/ Border#ToggleButtonBackground">
		<Setter Property="Background" Value="{DynamicResource ButtonBackgroundDisabled}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushDisabled}" />
	</Style>
	<Style Selector="Expander /template/ ToggleButton#ExpanderHeader:pointerover /template/ Border#ToggleButtonBackground">
		<Setter Property="Background" Value="{DynamicResource ButtonBackgroundPointerOver}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPointerOver}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource ButtonForegroundPointerOver}" />
	</Style>
	<Style Selector="Expander /template/ ToggleButton#ExpanderHeader:pressed /template/ Border#ToggleButtonBackground">
		<Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
		<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrushPressed}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource ButtonForegroundPressed}" />
	</Style>

	<!-- FullWindowTutorialPresenter -->
	<Style Selector="controls|FullWindowTutorialPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/FullWindowTutorialPresenter.Background}"/>
		<Setter Property="Template">
			<ControlTemplate>
				<Panel Name="PART_Root">
					<controls:Image Name="PART_Background"/>
					<Border Name="PART_TutorialContainer" Background="{DynamicResource ToolTipBackground}" BorderBrush="{DynamicResource ToolTipBorderBrush}" BorderThickness="1" BoxShadow="{DynamicResource BoxShadows/Shadow}" CornerRadius="{DynamicResource ControlCornerRadius}" Padding="{DynamicResource Thickness/FullWindowTutorialPresenter.Tutorial.Padding}">
						<Border.RenderTransform>
							<ScaleTransform ScaleX="{DynamicResource Double/FullWindowTutorialPresenter.Tutorial.InitScaleX}" ScaleY="{DynamicResource Double/FullWindowTutorialPresenter.Tutorial.InitScaleY}">
								<ScaleTransform.Transitions>
									<Transitions>
										<DoubleTransition Property="ScaleX" Duration="{StaticResource TimeSpan/Animation}" Easing="{StaticResource Easing/Animation}"/>
										<DoubleTransition Property="ScaleY" Duration="{StaticResource TimeSpan/Animation}" Easing="{StaticResource Easing/Animation}"/>
									</Transitions>
								</ScaleTransform.Transitions>
							</ScaleTransform>
						</Border.RenderTransform>
						<Grid ClipToBounds="True" ColumnDefinitions="Auto,*,Auto" RowDefinitions="*,Auto">
							
							<!-- Icon -->
							<Border VerticalAlignment="Top">
								<Image Classes="Icon" 
								       Height="{DynamicResource Double/FullWindowTutorialPresenter.Tutorial.Icon.Size}" 
								       IsVisible="{Binding Icon, Converter={x:Static aConverters:ObjectConverters.IsNotNull}}" 
								       Margin="{DynamicResource Thickness/FullWindowTutorialPresenter.Icon.Margin}" 
								       Source="{Binding Icon}"
								       Width="{DynamicResource Double/FullWindowTutorialPresenter.Tutorial.Icon.Size}"/>
							</Border>
							
							<!-- Description -->
							<Panel Grid.Column="1">
								<TextBlock Name="PART_Description"
								           FontSize="{DynamicResource Double/FullWindowTutorialPresenter.Tutorial.Description.FontSize}" 
								           MaxWidth="{DynamicResource Double/FullWindowTutorialPresenter.Tutorial.Description.MaxWidth}" 
								           Text="{Binding Description}" 
								           TextWrapping="Wrap" 
								           VerticalAlignment="Center"/>
								<TextBlock Name="PART_AlternativeDescription"
								           FontSize="{DynamicResource Double/FullWindowTutorialPresenter.Tutorial.Description.FontSize}" 
								           MaxWidth="{DynamicResource Double/FullWindowTutorialPresenter.Tutorial.Description.MaxWidth}" 
								           Text="{Binding Description}" 
								           TextWrapping="WrapWithOverflow" 
								           VerticalAlignment="Center"/>
							</Panel>
							
							<!-- Skip all tutorials -->
							<abControls:LinkTextBlock Name="PART_SkipAllTutorials" 
							                          Command="{Binding Presenter.RequestSkippingAllTutorials}" 
							                          FontSize="{DynamicResource Double/FullWindowTutorialPresenter.Tutorial.SkipAllTutorials.FontSize}" 
							                          Grid.Column="1" 
							                          Grid.Row="1" 
							                          IsVisible="{Binding IsSkippingAllTutorialsAllowed}" 
							                          Margin="{DynamicResource Thickness/FullWindowTutorialPresenter.SkipAllTutorials.Margin}" 
							                          Text="{DynamicResource String/TutorialPresenter.SkipAllTutorials}"/>
							
							<!-- Dismiss -->
							<Button Name="PART_Dismiss" 
							        Background="{DynamicResource ButtonBackgroundTransparent}" 
							        BorderThickness="0" Command="{Binding Presenter.DismissTutorial}" 
							        Grid.Column="2" 
							        Grid.RowSpan="2"
							        Height="{DynamicResource Double/FullWindowTutorialPresenter.Tutorial.Dismiss.Size}"
							        HorizontalAlignment="Left"
							        Margin="{DynamicResource Thickness/FullWindowTutorialPresenter.Dismiss.Margin}" 
							        Padding="{DynamicResource Thickness/FullWindowTutorialPresenter.Dismiss.Padding}" 
							        ToolTip.Tip="{DynamicResource String/Common.Close}"
							        VerticalAlignment="Top" 
							        Width="{DynamicResource Double/FullWindowTutorialPresenter.Tutorial.Dismiss.Size}">
								<Image Classes="Icon" 
								       Source="{DynamicResource Image/Icon.Close}"/>
							</Button>
							
						</Grid>
					</Border>
				</Panel>
			</ControlTemplate>
		</Setter>
	</Style>

	<!-- GridSplitter -->
	<Style Selector="GridSplitter">
		<Setter Property="MinHeight" Value="{DynamicResource Double/GridSplitter.Thickness}"/>
		<Setter Property="MinWidth" Value="{DynamicResource Double/GridSplitter.Thickness}"/>
		<Setter Property="Template">
			<ControlTemplate>
				<Border x:Name="PART_Root" 
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}"
						Background="{TemplateBinding Background}">
					<Border.Transitions>
						<Transitions>
							<BrushTransition Property="Background" Duration="{StaticResource TimeSpan/Animation}" Easing="{StaticResource Easing/Animation}"/>
						</Transitions>
					</Border.Transitions>
				</Border>
			</ControlTemplate>
		</Setter>
	</Style>
	<Style Selector="GridSplitter:pointerover /template/ Border#PART_Root">
		<Setter Property="Background" Value="{DynamicResource Brush/Accent}"/>
	</Style>
	<Style Selector="GridSplitter:pressed /template/ Border#PART_Root">
		<Setter Property="Background">
			<SolidColorBrush Color="{DynamicResource SystemAccentColorDark1}"/>
		</Setter>
	</Style>
	<Style Selector="GridSplitter.Splitter_Horizontal">
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="Width" Value="{DynamicResource Double/GridSplitter.Thickness}"/>
	</Style>
	<Style Selector="GridSplitter.Splitter_Vertical">
		<Setter Property="Height" Value="{DynamicResource Double/GridSplitter.Thickness}"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
	</Style>

	<!-- GroupBox -->
	<Style Selector="controls|GroupBox">
		<Setter Property="Background" Value="{DynamicResource ExpanderContentBackground}" />
		<Setter Property="BorderThickness" Value="{DynamicResource Thickness/Control.Border}" />
		<Setter Property="BorderBrush" Value="{DynamicResource Brush/Control.Border}" />
		<Setter Property="HorizontalAlignment" Value="Stretch" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="Padding" Value="{DynamicResource ExpanderContentPadding}" />
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="Template">
			<ControlTemplate>
				<DockPanel HorizontalAlignment="Stretch" 
					VerticalAlignment="Stretch">

					<!-- Header -->
					<Border Name="PART_Header" 
						Background="{DynamicResource ButtonBackground}" 
						BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{DynamicResource ControlCornerRadiusTop}" 
						DockPanel.Dock="Top" 
						HorizontalAlignment="Stretch" 
						Padding="{DynamicResource ExpanderHeaderPadding}">

						<ContentPresenter Content="{TemplateBinding Header}" 
							ContentTemplate="{TemplateBinding HeaderTemplate}"/>

					</Border>

					<!-- Content -->
					<Border Name="PART_Content"  
						Background="{TemplateBinding Background}"
						CornerRadius="{DynamicResource ControlCornerRadiusBottom}" 
						Margin="0,1,0,0"
						Padding="{TemplateBinding Padding}">

						<ContentPresenter Content="{TemplateBinding Content}" 
							ContentTemplate="{TemplateBinding ContentTemplate}"
							HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>

					</Border>

				</DockPanel>
			</ControlTemplate>
		</Setter>
	</Style>
	<Style Selector="controls|GroupBox:disabled /template/ Border#PART_Header">
		<Setter Property="Background" Value="{DynamicResource ButtonBackgroundDisabled}" />
	</Style>
	<Style Selector="controls|GroupBox:disabled /template/ Border#PART_Content">
		<Setter Property="Background" Value="{DynamicResource ExpanderDropDownBackgroundDisabled}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource ButtonForegroundDisabled}" />
	</Style>

	<!-- Icon -->
	<Style Selector=":is(Image).Icon">
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Stretch" Value="Uniform"/>
		<Setter Property="StretchDirection" Value="Both"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector=":is(Image).Icon:disabled">
		<Setter Property="Opacity" Value="{DynamicResource Double/Icon.Opacity.Disabled}"/>
	</Style>

	<!-- InPlaceAction -->
	<Style Selector="Border.InPlaceAction_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/InPlaceAction.IconSize}"/>
		<Setter Property="Width" Value="{DynamicResource Double/InPlaceAction.IconSize}"/>
	</Style>
	<Style Selector="Border.InPlaceAction_Reserved">
		<Setter Property="Height" Value="{DynamicResource Double/InPlaceAction.ReservedHeight}"/>
		<Setter Property="Opacity" Value="0"/>
		<Setter Property="Width" Value="1"/>
	</Style>
	<Style Selector="Border.InPlaceAction_Reserved_Large">
		<Setter Property="Height" Value="{DynamicResource Double/InPlaceAction.ReservedHeight.Large}"/>
		<Setter Property="Opacity" Value="0"/>
		<Setter Property="Width" Value="1"/>
	</Style>
	<Style Selector="Border.InPlaceAction_Reserved_Medium">
		<Setter Property="Height" Value="{DynamicResource Double/InPlaceAction.ReservedHeight.Medium}"/>
		<Setter Property="Opacity" Value="0"/>
		<Setter Property="Width" Value="1"/>
	</Style>
	<Style Selector="Button.InPlaceAction_Button">
		<Setter Property="Background" Value="{DynamicResource Brush/InPlaceAction.Background.Transparent}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/InPlaceAction.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/InPlaceAction.Padding}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style Selector="Button.InPlaceAction_Button /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Transitions" Value="{x:Null}"/>
	</Style>
	<Style Selector="Button.InPlaceAction_Button:disabled /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{x:Null}"/>
	</Style>
	<Style Selector="Button.InPlaceAction_Button:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/InPlaceAction.Background.PointerOver}"/>
	</Style>
	<Style Selector="Button.InPlaceAction_Button:pressed /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/InPlaceAction.Background.Pressed}"/>
	</Style>
	<Style Selector="Button.InPlaceAction_Button_Large">
		<Setter Property="Background" Value="{DynamicResource Brush/InPlaceAction.Background.Transparent}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/InPlaceAction.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/InPlaceAction.Padding.Large}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style Selector="Button.InPlaceAction_Button_Large /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Transitions" Value="{x:Null}"/>
	</Style>
	<Style Selector="Button.InPlaceAction_Button_Large:disabled /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{x:Null}"/>
	</Style>
	<Style Selector="Button.InPlaceAction_Button_Large:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/InPlaceAction.Background.PointerOver}"/>
	</Style>
	<Style Selector="Button.InPlaceAction_Button_Large:pressed /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/InPlaceAction.Background.Pressed}"/>
	</Style>
	<Style Selector="Button.InPlaceAction_Button_Medium">
		<Setter Property="Background" Value="{DynamicResource Brush/InPlaceAction.Background.Transparent}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/InPlaceAction.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/InPlaceAction.Padding.Medium}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style Selector="Button.InPlaceAction_Button_Medium /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Transitions" Value="{x:Null}"/>
	</Style>
	<Style Selector="Button.InPlaceAction_Button_Medium:disabled /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{x:Null}"/>
	</Style>
	<Style Selector="Button.InPlaceAction_Button_Medium:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/InPlaceAction.Background.PointerOver}"/>
	</Style>
	<Style Selector="Button.InPlaceAction_Button_Medium:pressed /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/InPlaceAction.Background.Pressed}"/>
	</Style>
	<Style Selector=":is(Image).InPlaceAction_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/InPlaceAction.IconSize}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Stretch" Value="Uniform"/>
		<Setter Property="StretchDirection" Value="Both"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/InPlaceAction.IconSize}"/>
	</Style>
	<Style Selector=":is(Image).InPlaceAction_Icon:disabled">
		<Setter Property="Opacity" Value="{DynamicResource Double/Icon.Opacity.Disabled}"/>
	</Style>
	<Style Selector=":is(Image).InPlaceAction_Icon_Large">
		<Setter Property="Height" Value="{DynamicResource Double/InPlaceAction.IconSize.Large}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Stretch" Value="Uniform"/>
		<Setter Property="StretchDirection" Value="Both"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/InPlaceAction.IconSize.Large}"/>
	</Style>
	<Style Selector=":is(Image).InPlaceAction_Icon_Large:disabled">
		<Setter Property="Opacity" Value="{DynamicResource Double/Icon.Opacity.Disabled}"/>
	</Style>
	<Style Selector=":is(Image).InPlaceAction_Icon_Medium">
		<Setter Property="Height" Value="{DynamicResource Double/InPlaceAction.IconSize.Medium}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Stretch" Value="Uniform"/>
		<Setter Property="StretchDirection" Value="Both"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/InPlaceAction.IconSize.Medium}"/>
	</Style>
	<Style Selector=":is(Image).InPlaceAction_Icon_Medium:disabled">
		<Setter Property="Opacity" Value="{DynamicResource Double/Icon.Opacity.Disabled}"/>
	</Style>
	<Style Selector="ToggleButton.InPlaceAction_ToggleButton">
		<Setter Property="Background" Value="{DynamicResource Brush/InPlaceAction.Background.Transparent}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/InPlaceAction.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/InPlaceAction.Padding}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style Selector="ToggleButton.InPlaceAction_ToggleButton /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Transitions" Value="{x:Null}"/>
	</Style>
	<Style Selector="ToggleButton.InPlaceAction_ToggleButton:disabled /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{x:Null}"/>
	</Style>
	<Style Selector="ToggleButton.InPlaceAction_ToggleButton:checked /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/InPlaceAction.Background.Checked}"/>
	</Style>
	<Style Selector="ToggleButton.InPlaceAction_ToggleButton:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/InPlaceAction.Background.PointerOver}"/>
	</Style>
	<Style Selector="ToggleButton.InPlaceAction_ToggleButton:pressed /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/InPlaceAction.Background.Pressed}"/>
	</Style>
	<Style Selector="ToggleButton.InPlaceAction_ToggleButton_Large">
		<Setter Property="Background" Value="{DynamicResource Brush/InPlaceAction.Background.Transparent}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/InPlaceAction.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/InPlaceAction.Padding.Large}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style Selector="ToggleButton.InPlaceAction_ToggleButton_Large /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Transitions" Value="{x:Null}"/>
	</Style>
	<Style Selector="ToggleButton.InPlaceAction_ToggleButton_Large:disabled /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{x:Null}"/>
	</Style>
	<Style Selector="ToggleButton.InPlaceAction_ToggleButton_Large:checked /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/InPlaceAction.Background.Checked}"/>
	</Style>
	<Style Selector="ToggleButton.InPlaceAction_ToggleButton_Large:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/InPlaceAction.Background.PointerOver}"/>
	</Style>
	<Style Selector="ToggleButton.InPlaceAction_ToggleButton_Large:pressed /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/InPlaceAction.Background.Pressed}"/>
	</Style>
	<Style Selector="ToggleButton.InPlaceAction_ToggleButton_Medium">
		<Setter Property="Background" Value="{DynamicResource Brush/InPlaceAction.Background.Transparent}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/InPlaceAction.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/InPlaceAction.Padding.Medium}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style Selector="ToggleButton.InPlaceAction_ToggleButton_Medium /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Transitions" Value="{x:Null}"/>
	</Style>
	<Style Selector="ToggleButton.InPlaceAction_ToggleButton_Medium:disabled /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{x:Null}"/>
	</Style>
	<Style Selector="ToggleButton.InPlaceAction_ToggleButton_Medium:checked /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/InPlaceAction.Background.Checked}"/>
	</Style>
	<Style Selector="ToggleButton.InPlaceAction_ToggleButton_Medium:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/InPlaceAction.Background.PointerOver}"/>
	</Style>
	<Style Selector="ToggleButton.InPlaceAction_ToggleButton_Medium:pressed /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/InPlaceAction.Background.Pressed}"/>
	</Style>

	<!-- IPAddressTextBox -->
	<Style Selector="TextBox:ipAddressTextBox">
		<Setter Property="Watermark" Value="{DynamicResource String/IPAddressTextBox.Watermark}"/>
	</Style>

	<!-- ListBox -->
	<Style Selector="ListBox">
		<Setter Property="Background" Value="{DynamicResource TextControlBackground}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrush}"/>
		<Setter Property="BorderThickness" Value="{DynamicResource Thickness/Control.Border}"/>
		<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/ListBox.Padding}"/>
	</Style>
	<Style Selector="ListBox:focused">
		<Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushFocused}"/>
	</Style>
	<Style Selector="ListBox:pointerover">
		<Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushPointerOver}"/>
	</Style>

	<!-- ListBoxItem -->
	<Style Selector="ListBoxItem">
		<Setter Property="CornerRadius" Value="{DynamicResource CornerRadius/ListBoxItem}"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/ListBoxItem.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/ListBoxItem.Padding}"/>
	</Style>
	<Style Selector="Border.ListBoxItem_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/ListBoxItem.Icon.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/ListBoxItem.Icon.Margin}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/ListBoxItem.Icon.Size}"/>
	</Style>
	<Style Selector=":is(Image).ListBoxItem_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/ListBoxItem.Icon.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/ListBoxItem.Icon.Margin}"/>
		<Setter Property="Stretch" Value="Uniform"/>
		<Setter Property="StretchDirection" Value="Both"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/ListBoxItem.Icon.Size}"/>
	</Style>
	<Style Selector=":is(Image).ListBoxItem_Icon:disabled">
		<Setter Property="Opacity" Value="{DynamicResource Double/Icon.Opacity.Disabled}"/>
	</Style>
	<Style Selector="Panel.ListBoxItem_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/ListBoxItem.Icon.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/ListBoxItem.Icon.Margin}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/ListBoxItem.Icon.Size}"/>
	</Style>
	<Style Selector="TextBlock.ListBoxItem_TextBlock">
		<Setter Property="TextTrimming" Value="CharacterEllipsis"/>
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>

	<!-- MarkdownViewer -->
	<Style Selector="controls|MarkdownViewer">
		<Setter Property="Background" Value="{DynamicResource TextControlBackground}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource Brush/Control.Border}"/>
		<Setter Property="BorderThickness" Value="{DynamicResource Thickness/Control.Border}"/>
		<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/MarkdownViewer.Padding}"/>
		<Setter Property="Template">
			<ControlTemplate>
				<Border 
					Background="{TemplateBinding Background}"
					BorderBrush="{TemplateBinding BorderBrush}"
					BorderThickness="{TemplateBinding BorderThickness}"
					CornerRadius="{TemplateBinding CornerRadius}">
					<md:MarkdownScrollViewer Name="PART_MarkdownPresenter"
						Source="{TemplateBinding Source}"/>
				</Border>
			</ControlTemplate>
		</Setter>
	</Style>
	<Style Selector="controls|MarkdownViewer:startsWithHeading">
		<Setter Property="Padding" Value="{DynamicResource Thickness/MarkdownViewer.Padding.StartsWithHeading}"/>
	</Style>

	<!-- Menu -->
	<Style Selector="Menu">
		<Setter Property="Background" Value="{DynamicResource Brush/Menu.Background}"/>
		<Setter Property="Height" Value="NaN"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/Menu.Padding}"/>
	</Style>

	<!-- MenuItem -->
	<Style Selector="Border.MenuItem_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/MenuItem.Icon.Size}"/>
		<Setter Property="Width" Value="{DynamicResource Double/MenuItem.Icon.Size}"/>
	</Style>
	<Style Selector=":is(Image).MenuItem_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/MenuItem.Icon.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Stretch" Value="Uniform"/>
		<Setter Property="StretchDirection" Value="Both"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/MenuItem.Icon.Size}"/>
	</Style>
	<Style Selector=":is(Image).MenuItem_Icon:disabled">
		<Setter Property="Opacity" Value="{DynamicResource Double/Icon.Opacity.Disabled}"/>
	</Style>
	<Style Selector="MenuItem">
		<Setter Property="CornerRadius" Value="{DynamicResource CornerRadius/MenuItem}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/MenuItem.Padding}"/>
	</Style>
	<Style Selector="Menu > MenuItem">
		<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/Menu.MenuItem.Padding}" />
	</Style>
	<Style Selector="Panel.MenuItem_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/MenuItem.Icon.Size}"/>
		<Setter Property="Width" Value="{DynamicResource Double/MenuItem.Icon.Size}"/>
	</Style>
	
	<!-- NotificationPresenter -->
	<Style Selector="controls|NotificationPresenter">
		<Style.Resources>
			
			<DataTemplate x:Key="DataTemplate/NotificationPresenter.Notification"
			              DataType="{x:Type controls:Notification}">
				<Border Background="{DynamicResource ToolTipBackground}"
				        BorderBrush="{DynamicResource ToolTipBorderBrush}"
				        BorderThickness="1"
				        BoxShadow="{DynamicResource BoxShadows/Shadow}"
				        CornerRadius="{DynamicResource ControlCornerRadius}" 
				        Margin="{DynamicResource Thickness/NotificationPresenter.Notification.Margin}"
				        Opacity="0"
				        Padding="{DynamicResource Thickness/NotificationPresenter.Notification.Padding}"
				        Width="{DynamicResource Double/NotificationPresenter.Notification.Width}">
					<Border.RenderTransform>
						<TranslateTransform Y="{DynamicResource Double/NotificationPresenter.Notification.InitTranslation.Y}">
							<TranslateTransform.Transitions>
								<Transitions>
									<DoubleTransition Property="Y" 
									                  Duration="{StaticResource TimeSpan/NotificationPresenter.Notification}" 
									                  Easing="{StaticResource Easing/Animation}"/>
								</Transitions>
							</TranslateTransform.Transitions>
						</TranslateTransform>
					</Border.RenderTransform>
					<Border.Transitions>
						<Transitions>
							<DoubleTransition Property="Opacity" 
							                  Duration="{StaticResource TimeSpan/NotificationPresenter.Notification}" 
							                  Easing="{StaticResource Easing/Animation}"/>
						</Transitions>
					</Border.Transitions>
					<Grid ColumnDefinitions="Auto,*,Auto" RowDefinitions="*,Auto">
						
						<!-- Icon -->
						<Image Classes="Icon" 
						       Height="{DynamicResource Double/NotificationPresenter.Notification.Icon.Size}"
						       IsVisible="{Binding Icon, Converter={x:Static ObjectConverters.IsNotNull}}"
						       Margin="{DynamicResource Thickness/NotificationPresenter.Notification.Icon.Margin}"
						       Source="{Binding Icon}"
						       VerticalAlignment="Top"
						       Width="{DynamicResource Double/NotificationPresenter.Notification.Icon.Size}"/>
						
						<!-- Title and message -->
						<Grid Grid.Column="1"
						      RowDefinitions="Auto,*"
						      VerticalAlignment="Center">
							
							<TextBlock FontSize="{DynamicResource Double/NotificationPresenter.Notification.Title.FontSize}"
							           FontWeight="Bold"
							           IsVisible="{Binding Title, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"
							           Margin="{DynamicResource Thickness/NotificationPresenter.Notification.Title.Margin}"
							           Text="{Binding Title}"
							           TextTrimming="CharacterEllipsis"
							           TextWrapping="NoWrap"/>
							
							<Panel Grid.Row="1">
								<TextBlock Name="PART_Message" 
								           FontSize="{DynamicResource Double/NotificationPresenter.Notification.Message.FontSize}"
								           MaxLines="{DynamicResource Int32/NotificationPresenter.Notification.MaxLines}"
								           Text="{Binding Message}"
								           TextTrimming="CharacterEllipsis"
								           TextWrapping="Wrap"/>
								<TextBlock Name="PART_AlternativeMessage" 
								           FontSize="{DynamicResource Double/NotificationPresenter.Notification.Message.FontSize}"
								           MaxLines="{DynamicResource Int32/NotificationPresenter.Notification.MaxLines}"
								           Text="{Binding Message}"
								           TextTrimming="CharacterEllipsis"
								           TextWrapping="WrapWithOverflow"/>
							</Panel>
							
						</Grid>
						
						<!-- Actions -->
						<WrapPanel Name="PART_ActionsPanel"
						           Grid.Column="1" 
						           Grid.Row="1"
						           HorizontalAlignment="Left"
						           IsVisible="{Binding $self.Children.Count}"
						           Margin="{DynamicResource Thickness/NotificationPresenter.Notification.Actions.Margin}"/>
						
						<!-- Dismiss -->
						<Button Background="{DynamicResource ButtonBackgroundTransparent}" 
						        BorderThickness="0" 
						        Command="{Binding Dismiss}" 
						        Grid.Column="2" 
						        Grid.RowSpan="2"
						        Height="{DynamicResource Double/NotificationPresenter.Notification.Dismiss.Size}"
						        Margin="{DynamicResource Thickness/NotificationPresenter.Notification.Dismiss.Margin}"
						        Opacity="{Binding $parent[Border].IsPointerOver, Converter={x:Static abConverters:BooleanToValueConverters.BooleanToOpacity}}"
						        Padding="{DynamicResource Thickness/NotificationPresenter.Notification.Dismiss.Padding}" 
						        ToolTip.Tip="{DynamicResource String/Common.Close}"
						        VerticalAlignment="Top" 
						        Width="{DynamicResource Double/NotificationPresenter.Notification.Dismiss.Size}">
							<Button.Transitions>
								<Transitions>
									<DoubleTransition Property="Opacity" 
									                  Duration="{StaticResource TimeSpan/Animation.Fast}" 
									                  Easing="{StaticResource Easing/Animation}"/>
								</Transitions>
							</Button.Transitions>
							<Image Classes="Icon" 
							       Source="{DynamicResource Image/Icon.Close}"/>
						</Button>
						
					</Grid>
				</Border>
			</DataTemplate>
			
			<DataTemplate x:Key="DataTemplate/NotificationPresenter.Notification.Action"
			              DataType="{x:Type controls:NotificationAction}">
				<abControls:LinkTextBlock Command="{Binding Command}" 
				                          CommandParameter="{Binding CommandParameter}"
				                          FontSize="{DynamicResource Double/NotificationPresenter.Notification.Action.FontSize}"
				                          Margin="{DynamicResource Thickness/NotificationPresenter.Notification.Action.Margin}"
				                          Text="{Binding Name}"/>
			</DataTemplate>
			
		</Style.Resources>
		<Setter Property="Template">
			<ControlTemplate>
				<StackPanel Name="PART_NotificationsPanel"
				            HorizontalAlignment="{TemplateBinding HorizontalNotificationsAlignment}"
				            VerticalAlignment="{TemplateBinding VerticalNotificationsAlignment}"/>
			</ControlTemplate>
		</Setter>
	</Style>

	<!-- NumericUpDown -->
	<Style Selector="NumericUpDown">
		<Setter Property="BorderThickness" Value="{DynamicResource Thickness/Control.Border}"/>
	</Style>
	<Style Selector="NumericUpDown[ButtonSpinnerLocation=Left] /template/ TextBox#PART_TextBox">
		<Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={x:Static converters:CornerRadiusConverters.Right}}"/>
	</Style>
	<Style Selector="NumericUpDown[ButtonSpinnerLocation=Right] /template/ TextBox#PART_TextBox">
		<Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="CornerRadius" Value="{TemplateBinding CornerRadius, Converter={x:Static converters:CornerRadiusConverters.Left}}"/>
	</Style>
	
	<!-- Popup -->
	<Style Selector="Popup > Border">
		<Setter Property="BoxShadow" Value="{DynamicResource BoxShadows/Shadow}"/>
		<Setter Property="Margin" Value="15"/>
	</Style>

	<!-- RepeatButton -->
	<Style Selector="RepeatButton">
		<Setter Property="BorderThickness" Value="{DynamicResource Thickness/Button.Border}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="{DynamicResource ButtonPadding}" />
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>

	<!-- ScrollBar -->
	<Style Selector="ScrollBar">
		<Setter Property="CornerRadius" Value="{DynamicResource CornerRadius/ScrollBar}"/>
	</Style>
	<Style Selector="ScrollBar:horizontal">
		<Setter Property="Template">
			<ControlTemplate>
				<Grid x:Name="Root">
					<Border x:Name="HorizontalRoot"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
						<Grid ColumnDefinitions="Auto,*,Auto">
							<Border x:Name="TrackBorder"
									Background="{DynamicResource ScrollBarTrackFill}"
									BorderBrush="{DynamicResource ScrollBarTrackStroke}"
									CornerRadius="{TemplateBinding CornerRadius}"
									Opacity="0"
									Grid.ColumnSpan="3"/>

							<RepeatButton Name="PART_LineUpButton"
										Classes="lineUpDown"
										VerticalAlignment="Center"
										Grid.Column="0"
										MinHeight="{DynamicResource ScrollBarSize}">
								<Viewbox Width="{DynamicResource ScrollBarButtonArrowIconFontSize}"
									Height="{DynamicResource ScrollBarButtonArrowIconFontSize}"
									HorizontalAlignment="Center"
									VerticalAlignment="Center">
									<Path 
										Data="F1M11.0855503082275,1.36561989784241C11.2953262329102,1.33462238311768,11.5138511657715,1.36283421516418,11.7149696350098,1.45411992073059C12.117208480835,1.63669085502625,12.3753786087036,2.03776741027832,12.375,2.47950005531311L12.375,13.2705001831055C12.375,14.2368745803833,11.236499786377,14.7543754577637,10.5097503662109,14.1176252365112L4.34250020980835,8.72212505340576 4.34362506866455,8.72212505340576C4.09915590286255,8.50849151611328,3.95889806747437,8.1996603012085,3.95889806747437,7.875C3.95889806747437,7.5503396987915,4.09915590286255,7.24150800704956,4.34362506866455,7.02787494659424L10.5086250305176,1.63237500190735C10.674747467041,1.48682403564453,10.8757743835449,1.39661741256714,11.0855503082275,1.36561989784241z"
										Fill="{Binding $parent[RepeatButton].Foreground}"
										VerticalAlignment="Center"
										HorizontalAlignment="Center"
										Width="18" Height="16"/>
								</Viewbox>
							</RepeatButton>

							<Track Grid.Column="1"
								Minimum="{TemplateBinding Minimum}"
								Maximum="{TemplateBinding Maximum}"
								Value="{TemplateBinding Value, Mode=TwoWay}"
								ViewportSize="{TemplateBinding ViewportSize}"
								Orientation="{TemplateBinding Orientation}">
								<Track.DecreaseButton>
									<RepeatButton Name="PART_PageUpButton"
												Classes="largeIncrease"
												Theme="{StaticResource FluentScrollBarPageButton}"
												Focusable="False" />
								</Track.DecreaseButton>
								<Track.IncreaseButton>
									<RepeatButton Name="PART_PageDownButton"
												Classes="largeIncrease"
												Theme="{StaticResource FluentScrollBarPageButton}"
												Focusable="False" />
								</Track.IncreaseButton>
								<Thumb Classes="thumb"
										Opacity="1"
										Height="{DynamicResource Double/ScrollBar.Thumb.Size}"
										MinWidth="{DynamicResource ScrollBarSize}"
										RenderTransform="{DynamicResource HorizontalSmallScrollThumbScaleTransform}"
										VerticalAlignment="Center" />
							</Track>

							<RepeatButton Name="PART_LineDownButton"
										Classes="lineUpDown"
										VerticalAlignment="Center"
										Grid.Column="2"
										MinHeight="{DynamicResource ScrollBarSize}">
								<Viewbox Width="{DynamicResource ScrollBarButtonArrowIconFontSize}"
									Height="{DynamicResource ScrollBarButtonArrowIconFontSize}"
									HorizontalAlignment="Center"
									VerticalAlignment="Center">
									<Path 
										Data="F1M6.9144492149353,1.36561989784241C7.12422513961792,1.39661741256714,7.32525157928467,1.48682403564453,7.49137496948242,1.63237500190735L13.6563749313354,7.02787494659424C13.9008436203003,7.24150800704956,14.0411014556885,7.5503396987915,14.0411014556885,7.875C14.0411014556885,8.1996603012085,13.9008436203003,8.50849151611328,13.6563749313354,8.72212505340576L13.6575002670288,8.72212505340576 7.49025011062622,14.1176252365112C6.76350021362305,14.7543754577637,5.625,14.2368745803833,5.625,13.2705001831055L5.625,2.47950005531311C5.62462139129639,2.03776741027832,5.88279104232788,1.63669085502625,6.28502941131592,1.45411992073059C6.48614883422852,1.36283421516418,6.70467329025269,1.33462238311768,6.9144492149353,1.36561989784241z"
										Fill="{Binding $parent[RepeatButton].Foreground}"
										VerticalAlignment="Center"
										HorizontalAlignment="Center"
										Width="18" Height="16"/>
								</Viewbox>
							</RepeatButton>
						</Grid>
					</Border>
				</Grid>
			</ControlTemplate>
		</Setter>
	</Style>
	<Style Selector="ScrollBar:vertical">
		<Setter Property="Template">
			<ControlTemplate>
				<Grid x:Name="Root">
					<Border x:Name="VerticalRoot"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}">
						<Grid RowDefinitions="Auto,*,Auto">
							<Border x:Name="TrackBorder"
									Background="{DynamicResource ScrollBarTrackFill}"
									BorderBrush="{DynamicResource ScrollBarTrackStroke}"
									CornerRadius="{TemplateBinding CornerRadius}"
									Opacity="0"
									Grid.RowSpan="3"/>

							<RepeatButton Name="PART_LineUpButton"
										Classes="lineUpDown"
										HorizontalAlignment="Center"
										Grid.Row="0"
										MinWidth="{DynamicResource ScrollBarSize}">
								<Viewbox Width="{DynamicResource ScrollBarButtonArrowIconFontSize}"
									Height="{DynamicResource ScrollBarButtonArrowIconFontSize}"
									HorizontalAlignment="Center"
									VerticalAlignment="Center">
									<Path 
										Data="F1M9,3.95889806747437C9.3246603012085,3.95889806747437,9.63349151611328,4.09915590286255,9.84712505340576,4.34362506866455L15.2426252365112,10.5086250305176C15.533727645874,10.8408708572388,15.6034526824951,11.3127317428589,15.4208812713623,11.7149696350098C15.2383098602295,12.117208480835,14.837233543396,12.3753786087036,14.3955001831055,12.375L3.60450005531311,12.375C2.63812494277954,12.375,2.12062501907349,11.236499786377,2.75737500190735,10.5086250305176L8.15287494659424,4.34250020980835 8.15287494659424,4.34362506866455C8.36650848388672,4.09915590286255,8.6753396987915,3.95889806747437,9,3.95889806747437z"
										Fill="{Binding $parent[RepeatButton].Foreground}"
										VerticalAlignment="Center"
										HorizontalAlignment="Center"
										Width="18" Height="16"/>
								</Viewbox>
							</RepeatButton>

							<Track Grid.Row="1"
								Minimum="{TemplateBinding Minimum}"
								Maximum="{TemplateBinding Maximum}"
								Value="{TemplateBinding Value, Mode=TwoWay}"
								ViewportSize="{TemplateBinding ViewportSize}"
								Orientation="{TemplateBinding Orientation}"
								IsDirectionReversed="True">
								<Track.DecreaseButton>
									<RepeatButton Name="PART_PageUpButton"
												Classes="largeIncrease"
												Theme="{StaticResource FluentScrollBarPageButton}"
												Focusable="False" />
								</Track.DecreaseButton>
								<Track.IncreaseButton>
									<RepeatButton Name="PART_PageDownButton"
												Classes="largeIncrease"
												Theme="{StaticResource FluentScrollBarPageButton}"
												Focusable="False" />
								</Track.IncreaseButton>
								<Thumb Classes="thumb"
										Opacity="1"
										MinHeight="{DynamicResource ScrollBarSize}"
										Width="{DynamicResource Double/ScrollBar.Thumb.Size}"
										RenderTransform="{DynamicResource VerticalSmallScrollThumbScaleTransform}"
										HorizontalAlignment="Center" />
							</Track>

							<RepeatButton Name="PART_LineDownButton"
										Classes="lineUpDown"
										HorizontalAlignment="Center"
										Grid.Row="2"
										MinWidth="{DynamicResource ScrollBarSize}">
								<Viewbox Width="{DynamicResource ScrollBarButtonArrowIconFontSize}"
									Height="{DynamicResource ScrollBarButtonArrowIconFontSize}"
									HorizontalAlignment="Center"
									VerticalAlignment="Center">
									<Path 
										Data="F1M3.60450005531311,3.375L14.3955001831055,3.375C14.837233543396,3.37462115287781,15.2383098602295,3.63279128074646,15.4208812713623,4.03502941131592C15.6034526824951,4.43726778030396,15.533727645874,4.90912866592407,15.2426252365112,5.24137496948242L9.84712505340576,11.4063749313354C9.63349151611328,11.6508436203003,9.3246603012085,11.7911014556885,9,11.7911014556885C8.6753396987915,11.7911014556885,8.36650848388672,11.6508436203003,8.15287494659424,11.4063749313354L8.15287494659424,11.4075002670288 2.75737500190735,5.24025011062622C2.12062501907349,4.51462507247925,2.63812494277954,3.375,3.60450005531311,3.375z"
										Fill="{Binding $parent[RepeatButton].Foreground}"
										VerticalAlignment="Center"
										HorizontalAlignment="Center"
										Width="18" Height="16"/>
								</Viewbox>
							</RepeatButton>
						</Grid>
					</Border>
				</Grid>
			</ControlTemplate>
		</Setter>
	</Style>
	<Style Selector="ScrollBar:horizontal /template/ RepeatButton#PART_LineUpButton">
    	<Setter Property="CornerRadius" Value="{DynamicResource CornerRadius/ScrollBar.Button.Left}"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/ScrollBar.Button.Margin.Left}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/ScrollBar.Button.Padding.Horizontal}"/>
  	</Style>
	<Style Selector="ScrollBar:horizontal /template/ RepeatButton#PART_LineDownButton">
    	<Setter Property="CornerRadius" Value="{DynamicResource CornerRadius/ScrollBar.Button.Right}"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/ScrollBar.Button.Margin.Right}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/ScrollBar.Button.Padding.Horizontal}"/>
  	</Style>
	  <Style Selector="ScrollBar:vertical /template/ RepeatButton#PART_LineUpButton">
    	<Setter Property="CornerRadius" Value="{DynamicResource CornerRadius/ScrollBar.Button.Top}"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/ScrollBar.Button.Margin.Top}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/ScrollBar.Button.Padding.Vertical}"/>
  	</Style>
	<Style Selector="ScrollBar:vertical /template/ RepeatButton#PART_LineDownButton">
    	<Setter Property="CornerRadius" Value="{DynamicResource CornerRadius/ScrollBar.Button.Bottom}"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/ScrollBar.Button.Margin.Bottom}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/ScrollBar.Button.Padding.Vertical}"/>
  	</Style>
	<Style Selector="ScrollBar /template/ RepeatButton.lineUpDown">
		<Setter Property="Background" Value="{DynamicResource ScrollBarButtonBackground}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Foreground" Value="{DynamicResource ScrollBarButtonArrowForeground}"/>
		<Setter Property="IsEnabled" Value="False" />
		<Setter Property="Opacity" Value="0" />
	</Style>
	<Style Selector="ScrollBar /template/ RepeatButton.lineUpDown:pointerover">
		<Setter Property="Background" Value="{DynamicResource ScrollBarButtonBackgroundPointerOver}"/>
		<Setter Property="Foreground" Value="{DynamicResource ScrollBarButtonArrowForegroundPointerOver}"/>
	</Style>
	<Style Selector="ScrollBar /template/ RepeatButton.lineUpDown:pressed">
		<Setter Property="Background" Value="{DynamicResource ScrollBarButtonBackgroundPressed}"/>
		<Setter Property="Foreground" Value="{DynamicResource ScrollBarButtonArrowForegroundPressed}"/>
	</Style>
	<Style Selector="ScrollBar /template/ RepeatButton.lineUpDown:disabled">
		<Setter Property="Foreground" Value="{DynamicResource ScrollBarButtonArrowForegroundDisabled}"/>
	</Style>
	<Style Selector="ScrollBar /template/ RepeatButton.lineUpDown">
		<Setter Property="Background" Value="{DynamicResource ScrollBarButtonBackground}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Foreground" Value="{DynamicResource ScrollBarButtonArrowForeground}"/>
	</Style>
	<Style Selector="ScrollBar[IsExpanded=true] /template/ RepeatButton.lineUpDown">
		<Setter Property="IsEnabled" Value="True" />
		<Setter Property="Opacity" Value="1" />
	</Style>
	<Style Selector="ScrollBar /template/ Thumb.thumb">
		<Setter Property="Background" Value="{DynamicResource ScrollBarThumbBackgroundColor}" />
		<Setter Property="Template">
			<ControlTemplate>
				<Border Background="{TemplateBinding Background}"
					BorderBrush="{TemplateBinding BorderBrush}"
					BorderThickness="{TemplateBinding BorderThickness}"
					CornerRadius="{TemplateBinding CornerRadius}"
					Focusable="False" />
			</ControlTemplate>
		</Setter>
  	</Style>
	<Style Selector="ScrollBar[IsExpanded=true] /template/ Thumb.thumb">
		<Setter Property="CornerRadius" Value="{DynamicResource CornerRadius/ScrollBar.Thumb.Expanded}" />
  	</Style>
	<Style Selector="ScrollBar /template/ Thumb.thumb:pointerover">
		<Setter Property="Background" Value="{DynamicResource ScrollBarThumbFillPointerOver}"/>
	</Style>
	<Style Selector="ScrollBar /template/ Thumb.thumb:pressed">
		<Setter Property="Background" Value="{DynamicResource ScrollBarThumbFillPressed}"/>
	</Style>
	<Style Selector="ScrollBar /template/ Thumb.thumb:disabled">
		<Setter Property="Background" Value="{DynamicResource ScrollBarThumbFillDisabled}"/>
	</Style>
	<Style Selector="ScrollBar /template/ Border#TrackBorder">
		<Setter Property="Background" Value="{DynamicResource ScrollBarTrackFill}" />
		<Setter Property="Opacity" Value="0" />
		<Setter Property="Transitions" Value="{x:Null}"/>
	</Style>
	<Style Selector="ScrollBar[IsExpanded=true] /template/ Border#TrackBorder">
		<Setter Property="Background" Value="{DynamicResource ScrollBarTrackFillPointerOver}" />
		<Setter Property="Opacity" Value="1" />
	</Style>

	<!-- ScrollViewer -->
	<Style Selector="ScrollViewer /template/ ScrollBar#PART_HorizontalScrollBar">
		<Setter Property="Margin" Value="{DynamicResource Thickness/ScrollViewer.ScrollBar.Margin.Horizontal}"/>
	</Style>
	<Style Selector="ScrollViewer /template/ ScrollBar#PART_VerticalScrollBar">
		<Setter Property="Margin" Value="{DynamicResource Thickness/ScrollViewer.ScrollBar.Margin.Vertical}"/>
	</Style>
	<Style Selector="ScrollViewer /template/ ScrollBar /template/ Thumb.thumb">
		<Setter Property="RenderTransformOrigin" Value="120%,120%"/>
	</Style>

	<!-- SelectableTextBlock -->
	<Style Selector=":is(SelectableTextBlock)">
		<Setter Property="SelectionBrush" Value="{DynamicResource Brush/SelectableTextBlock.Selection.Background}"/>
	</Style>
	<Style Selector=":is(SelectableTextBlock)[IsEnabled=True]">
		<Setter Property="ContextMenu">
			<ContextMenu Cursor="Arrow">
				<MenuItem Command="{Binding $parent[SelectableTextBlock].Copy}" Header="{DynamicResource String/Common.Copy}" IsEnabled="{Binding $parent[SelectableTextBlock].CanCopy}" InputGesture="{x:Static input:KeyGestures.Copy}"/>
				<MenuItem Command="{Binding $parent[SelectableTextBlock].SelectAll}" Header="{DynamicResource String/Common.SelectAll}" IsEnabled="{Binding $parent[SelectableTextBlock].Text, Converter={x:Static aConverters:StringConverters.IsNotNullOrEmpty}}"/>
			</ContextMenu>
		</Setter>
	</Style>

	<!-- Separator -->
	<Style Selector="Separator">
		<Setter Property="Background" Value="{DynamicResource Brush/Separator.Background}"/>
		<Setter Property="Margin" Value="0"/>
	</Style>
	<Style Selector="MenuItem > Separator, ContextMenu > Separator">
		<Setter Property="Background" Value="{DynamicResource SystemControlForegroundBaseMediumLowBrush}" />
		<Setter Property="Margin" Value="{DynamicResource Thickness/MenuFlyout.Separator.Margin}"/>
		<Setter Property="Opacity" Value="0.5"/>
	</Style>
	
	<!-- Shadow -->
	<Style Selector="Border.Shadow_Bottom">
		<Setter Property="Background" Value="{DynamicResource Brush/Shadow.Bottom}"/>
		<Setter Property="Height" Value="{DynamicResource Double/Shadow.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
	</Style>
	<Style Selector="Border.Shadow_Bottom_Heavy">
		<Setter Property="Background" Value="{DynamicResource Brush/Shadow.Bottom.Heavy}"/>
		<Setter Property="Height" Value="{DynamicResource Double/Shadow.Size.Heavy}"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
	</Style>
	<Style Selector="Border.Shadow_Bottom_Light">
		<Setter Property="Background" Value="{DynamicResource Brush/Shadow.Bottom.Light}"/>
		<Setter Property="Height" Value="{DynamicResource Double/Shadow.Size.Light}"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
	</Style>
	<Style Selector="Border.Shadow_Left">
		<Setter Property="Background" Value="{DynamicResource Brush/Shadow.Left}"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="Width" Value="{DynamicResource Double/Shadow.Size}"/>
	</Style>
	<Style Selector="Border.Shadow_Left_Heavy">
		<Setter Property="Background" Value="{DynamicResource Brush/Shadow.Left.Heavy}"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="Width" Value="{DynamicResource Double/Shadow.Size.Heavy}"/>
	</Style>
	<Style Selector="Border.Shadow_Left_Light">
		<Setter Property="Background" Value="{DynamicResource Brush/Shadow.Left.Light}"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="Width" Value="{DynamicResource Double/Shadow.Size.Light}"/>
	</Style>
	<Style Selector="Border.Shadow_Right">
		<Setter Property="Background" Value="{DynamicResource Brush/Shadow.Right}"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="Width" Value="{DynamicResource Double/Shadow.Size}"/>
	</Style>
	<Style Selector="Border.Shadow_Right_Heavy">
		<Setter Property="Background" Value="{DynamicResource Brush/Shadow.Right.Heavy}"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="Width" Value="{DynamicResource Double/Shadow.Size.Heavy}"/>
	</Style>
	<Style Selector="Border.Shadow_Right_Light">
		<Setter Property="Background" Value="{DynamicResource Brush/Shadow.Right.Light}"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="Width" Value="{DynamicResource Double/Shadow.Size.Light}"/>
	</Style>
	<Style Selector="Border.Shadow_Top">
		<Setter Property="Background" Value="{DynamicResource Brush/Shadow.Top}"/>
		<Setter Property="Height" Value="{DynamicResource Double/Shadow.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
	</Style>
	<Style Selector="Border.Shadow_Top_Heavy">
		<Setter Property="Background" Value="{DynamicResource Brush/Shadow.Top.Heavy}"/>
		<Setter Property="Height" Value="{DynamicResource Double/Shadow.Size.Heavy}"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
	</Style>
	<Style Selector="Border.Shadow_Top_Light">
		<Setter Property="Background" Value="{DynamicResource Brush/Shadow.Top.Light}"/>
		<Setter Property="Height" Value="{DynamicResource Double/Shadow.Size.Light}"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
	</Style>
	<Style Selector="Line.Shadow">
		<Setter Property="Stretch" Value="Fill"/>
		<Setter Property="StrokeThickness" Value="1"/>
	</Style>
	<Style Selector="Line[VerticalAlignment=Bottom].Shadow">
		<Setter Property="EndPoint" Value="5,0"/>
		<Setter Property="StartPoint" Value="0,0"/>
		<Setter Property="Stroke" Value="{DynamicResource Brush/Shadow.Darken}"/>
	</Style>
	<Style Selector="Line[HorizontalAlignment=Left].Shadow">
		<Setter Property="EndPoint" Value="0,5"/>
		<Setter Property="StartPoint" Value="0,0"/>
		<Setter Property="Stroke">
			<LinearGradientBrush EndPoint="0%,100%" StartPoint="0%,0%">
				<GradientStop Color="{DynamicResource Color/Shadow.Lighten}" Offset="0"/>
				<GradientStop Color="{DynamicResource Color/Shadow.Darken}" Offset="1"/>
			</LinearGradientBrush>
		</Setter>
	</Style>
	<Style Selector="Line[HorizontalAlignment=Right].Shadow">
		<Setter Property="EndPoint" Value="0,5"/>
		<Setter Property="StartPoint" Value="0,0"/>
		<Setter Property="Stroke">
			<LinearGradientBrush EndPoint="0%,100%" StartPoint="0%,0%">
				<GradientStop Color="{DynamicResource Color/Shadow.Lighten}" Offset="0"/>
				<GradientStop Color="{DynamicResource Color/Shadow.Darken}" Offset="1"/>
			</LinearGradientBrush>
		</Setter>
	</Style>
	<Style Selector="Line[VerticalAlignment=Top].Shadow">
		<Setter Property="EndPoint" Value="5,0"/>
		<Setter Property="StartPoint" Value="0,0"/>
		<Setter Property="Stroke" Value="{DynamicResource Brush/Shadow.Lighten}"/>
	</Style>

	<!-- StatusBar -->
	<Style Selector="Border.StatusBar">
		<Setter Property="Background" Value="{DynamicResource Brush/StatusBar.Background}"/>
		<Setter Property="DockPanel.Dock" Value="Bottom"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/StatusBar.Padding}"/>
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource Brush/StatusBar.Foreground}"/>
		<Setter Property="VerticalAlignment" Value="Bottom"/>
	</Style>
	<Style Selector="Border.StatusBar_DropDownIcon">
		<Setter Property="Height" Value="{DynamicResource Double/StatusBar.DropDownIcon.Size}"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/StatusBar.DropDownIcon.Margin}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/StatusBar.DropDownIcon.Size}"/>
	</Style>
	<Style Selector="Button.StatusBar_Button">
		<Setter Property="Background" Value="{DynamicResource Brush/StatusBar.Button.Background.Transparent}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Foreground" Value="{DynamicResource Brush/StatusBar.Foreground}"/>
		<Setter Property="CornerRadius" Value="0"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/StatusBar.Button.Padding}"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style Selector="Button.StatusBar_Button:disabled /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource Brush/StatusBar.Foreground.Disabled}"/>
	</Style>
	<Style Selector="Button.StatusBar_Button:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/StatusBar.Button.Background.PointerOver}"/>
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource Brush/StatusBar.Foreground}"/>
	</Style>
	<Style Selector="Button.StatusBar_Button:pressed /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/StatusBar.Button.Background.Pressed}"/>
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource Brush/StatusBar.Foreground}"/>
	</Style>
	<Style Selector=":is(Image).StatusBar_DropDownIcon">
		<Setter Property="Height" Value="{DynamicResource Double/StatusBar.DropDownIcon.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/StatusBar.DropDownIcon.Margin}"/>
		<Setter Property="Stretch" Value="Uniform"/>
		<Setter Property="StretchDirection" Value="Both"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/StatusBar.DropDownIcon.Size}"/>
	</Style>
	<Style Selector=":is(Image).StatusBar_DropDownIcon:disabled">
		<Setter Property="Opacity" Value="{DynamicResource Double/Icon.Opacity.Disabled}"/>
	</Style>
	<Style Selector=":is(Image).StatusBar_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/StatusBar.Icon.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/StatusBar.Icon.Margin}"/>
		<Setter Property="Stretch" Value="Uniform"/>
		<Setter Property="StretchDirection" Value="Both"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/StatusBar.Icon.Size}"/>
	</Style>
	<Style Selector=":is(Image).StatusBar_Icon:disabled">
		<Setter Property="Opacity" Value="{DynamicResource Double/Icon.Opacity.Disabled}"/>
	</Style>
	<Style Selector=":is(Image).StatusBar_IconWithText">
		<Setter Property="Height" Value="{DynamicResource Double/StatusBar.Icon.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/StatusBar.Icon.Margin.WithText}"/>
		<Setter Property="Stretch" Value="Uniform"/>
		<Setter Property="StretchDirection" Value="Both"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/StatusBar.Icon.Size}"/>
	</Style>
	<Style Selector=":is(Image).StatusBar_IconIconWithText:disabled">
		<Setter Property="Opacity" Value="{DynamicResource Double/Icon.Opacity.Disabled}"/>
	</Style>
	<Style Selector="Panel.StatusBar_DropDownIcon">
		<Setter Property="Height" Value="{DynamicResource Double/StatusBar.DropDownIcon.Size}"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/StatusBar.DropDownIcon.Margin}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/StatusBar.DropDownIcon.Size}"/>
	</Style>
	<Style Selector="Panel.StatusBar_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/StatusBar.Icon.Size}"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/StatusBar.Icon.Margin}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/StatusBar.Icon.Size}"/>
	</Style>
	<Style Selector="Panel.StatusBar_IconIconWithText">
		<Setter Property="Height" Value="{DynamicResource Double/StatusBar.Icon.Size}"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/StatusBar.Icon.Margin.WithText}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/StatusBar.Icon.Size}"/>
	</Style>
	<Style Selector="RepeatButton.StatusBar_RepeatButton">
		<Setter Property="Background" Value="{DynamicResource Brush/StatusBar.Button.Background.Transparent}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Foreground" Value="{DynamicResource Brush/StatusBar.Foreground}"/>
		<Setter Property="CornerRadius" Value="0"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/StatusBar.Button.Padding}"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style Selector="RepeatButton.StatusBar_RepeatButton:disabled /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource Brush/StatusBar.Foreground.Disabled}"/>
	</Style>
	<Style Selector="RepeatButton.StatusBar_RepeatButton:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/StatusBar.Button.Background.PointerOver}"/>
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource Brush/StatusBar.Foreground}"/>
	</Style>
	<Style Selector="RepeatButton.StatusBar_RepeatButton:pressed /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/StatusBar.Button.Background.Pressed}"/>
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource Brush/StatusBar.Foreground}"/>
	</Style>
	<Style Selector="Separator.StatusBar_Separator">
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="Width" Value="20"/>
	</Style>
	<Style Selector="TextBlock.StatusBar_TextBlock">
		<Setter Property="Margin" Value="{DynamicResource Thickness/StatusBar.Item.Margin}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="ToggleButton.StatusBar_ToggleButton">
		<Setter Property="Background" Value="{DynamicResource Brush/StatusBar.Button.Background.Transparent}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Foreground" Value="{DynamicResource Brush/StatusBar.Foreground}"/>
		<Setter Property="CornerRadius" Value="0"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/StatusBar.Button.Padding}"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style Selector="ToggleButton.StatusBar_ToggleButton:disabled /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{x:Null}"/>
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource Brush/StatusBar.Foreground.Disabled}"/>
	</Style>
	<Style Selector="ToggleButton.StatusBar_ToggleButton:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/StatusBar.Button.Background.PointerOver}"/>
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource Brush/StatusBar.Foreground}"/>
	</Style>
	<Style Selector="ToggleButton.StatusBar_ToggleButton:pressed /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/StatusBar.Button.Background.Pressed}"/>
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource Brush/StatusBar.Foreground}"/>
	</Style>
	<Style Selector="ToggleButton.StatusBar_ToggleButton:checked /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/StatusBar.ToggleButton.Background.Checked}"/>
	</Style>
	<Style Selector="ToggleButton.StatusBar_ToggleButton:checked:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/StatusBar.Button.Background.Pressed}"/>
	</Style>

	<!-- TabControl -->
	<Style Selector="RepeatButton.TabStripScroller">
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/TabControl.TabStrip.ScrollingButton.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/TabControl.TabStrip.ScrollingButton.Padding}"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style Selector="controls|TabStripScrollViewer">
		<Setter Property="HorizontalScrollBarVisibility" Value="Visible"/>
		<Setter Property="Template">
			<ControlTemplate>
				<Panel Background="{TemplateBinding Background}">
					<ScrollContentPresenter Name="PART_ContentPresenter"
                        Margin="{TemplateBinding Padding}">
						<ScrollContentPresenter.GestureRecognizers>
							<ScrollGestureRecognizer
								CanHorizontallyScroll="{Binding #PART_ContentPresenter.CanHorizontallyScroll}"
								CanVerticallyScroll="{Binding #PART_ContentPresenter.CanVerticallyScroll}"/>
						</ScrollContentPresenter.GestureRecognizers>
					</ScrollContentPresenter>
					<RepeatButton
						Name="PART_ScrollLeftButton"
						Classes="TabStripScroller"
						Command="{Binding ScrollLeft, RelativeSource={RelativeSource TemplatedParent}}"
                        HorizontalAlignment="Left">
						<RepeatButton.IsVisible>
							<MultiBinding Converter="{x:Static converters:ScrollingButtonVisibilityConverter.Default}" ConverterParameter="Left">
								<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Offset.X"/>
								<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Extent.Width"/>
								<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Viewport.Width"/>
							</MultiBinding>
						</RepeatButton.IsVisible>
						<Image 
							Classes="Icon" 
							Height="{DynamicResource Double/TabControl.TabStrip.ScrollingButton.Icon.Size}"
							Source="{DynamicResource Image/Icon.DropDown.Left}"
							Width="{DynamicResource Double/TabControl.TabStrip.ScrollingButton.Icon.Size}"/>
					</RepeatButton>
					<RepeatButton
						Name="PART_ScrollRightButton"
						Classes="TabStripScroller"
						Command="{Binding ScrollRight, RelativeSource={RelativeSource TemplatedParent}}"
                        HorizontalAlignment="Right">
						<RepeatButton.IsVisible>
							<MultiBinding Converter="{x:Static converters:ScrollingButtonVisibilityConverter.Default}" ConverterParameter="Right">
								<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Offset.X"/>
								<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Extent.Width"/>
								<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Viewport.Width"/>
							</MultiBinding>
						</RepeatButton.IsVisible>
						<Image
							Classes="Icon"
							Height="{DynamicResource Double/TabControl.TabStrip.ScrollingButton.Icon.Size}"
							Source="{DynamicResource Image/Icon.DropDown.Right}"
							Width="{DynamicResource Double/TabControl.TabStrip.ScrollingButton.Icon.Size}"/>
					</RepeatButton>
				</Panel>
			</ControlTemplate>
		</Setter>
		<Setter Property="VerticalScrollBarVisibility" Value="Disabled"/>
	</Style>
	<Style Selector="TabControl">
		<Setter Property="ItemsPanel">
			<ItemsPanelTemplate>
				<StackPanel Orientation="Horizontal"/>
			</ItemsPanelTemplate>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="{TemplateBinding CornerRadius}"
							Background="{x:Null}"
							HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
							VerticalAlignment="{TemplateBinding VerticalAlignment}">
						<DockPanel>
							<Panel DockPanel.Dock="Top">
								<Line EndPoint="6,0" Height="1" HorizontalAlignment="Stretch" Stretch="Fill" StartPoint="0,0" Stroke="{DynamicResource Brush/TabControl.TabStrip.Border}" StrokeThickness="1" VerticalAlignment="Bottom"/>
								<controls:TabStripScrollViewer Name="PART_TabStripScrollViewer" Background="{x:Null}" Padding="{DynamicResource Thickness/TabControl.TabStrip.Padding}">
									<ItemsPresenter Name="PART_ItemsPresenter"
									                ItemsPanel="{TemplateBinding ItemsPanel}"/>
								</controls:TabStripScrollViewer>
							</Panel>
							<ContentPresenter Name="PART_SelectedContentHost"
											  Background="{TemplateBinding Background}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
											  Content="{TemplateBinding SelectedContent}"
											  ContentTemplate="{TemplateBinding SelectedContentTemplate}" />
						</DockPanel>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- TabItem -->
	<Style Selector="Border.TabItem_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/TabItem.Header.Icon.Size}"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/TabItem.Header.Icon.Margin}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/TabItem.Header.Icon.Size}"/>
	</Style>
	<Style Selector="Button.TabItem_Button">
		<Setter Property="Background" Value="{DynamicResource ButtonBackgroundTransparent}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Height" Value="{DynamicResource Double/TabItem.Header.Content.Height}"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/TabItem.Header.Button.Margin}"/>
		<Setter Property="Opacity" Value="{DynamicResource Double/Icon.Opacity.Disabled}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/TabItem.Header.Button.Padding}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/TabItem.Header.Content.Height}"/>
	</Style>
	<Style Selector="Button.TabItem_Button:pointerover">
		<Setter Property="Opacity" Value="1"/>
	</Style>
	<Style Selector=":is(Image).TabItem_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/TabItem.Header.Icon.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/TabItem.Header.Icon.Margin}"/>
		<Setter Property="Stretch" Value="Uniform"/>
		<Setter Property="StretchDirection" Value="Both"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/TabItem.Header.Icon.Size}"/>
	</Style>
	<Style Selector=":is(Image).TabItem_Icon:disabled">
		<Setter Property="Opacity" Value="{DynamicResource Double/Icon.Opacity.Disabled}"/>
	</Style>
	<Style Selector="Panel.TabItem_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/TabItem.Header.Icon.Size}"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/TabItem.Header.Icon.Margin}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/TabItem.Header.Icon.Size}"/>
	</Style>
	<Style Selector="TabItem">
		<Setter Property="MaxHeight" Value="{DynamicResource Double/TabItem.Header.Height}"/>
		<Setter Property="MinHeight" Value="{DynamicResource Double/TabItem.Header.Height}"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<Border Background="{x:Static Brushes.Transparent}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
						<DockPanel VerticalAlignment="Stretch">

							<Border DockPanel.Dock="Left" IsVisible="{TemplateBinding controls:ItemInsertionIndicator.IsInsertingItemBefore}" Margin="{DynamicResource Thickness/TabItem.InsertionIndicator.Margin}">
								<Border Background="{DynamicResource Brush/TabItem.Header.InsertionIndicator.Background}" CornerRadius="{DynamicResource CornerRadius/TabItem.Header}" Margin="{DynamicResource Thickness/TabItem.Header.Margin}" Width="{DynamicResource Double/TabItem.Header.InsertionIndicator.Width}"/>
							</Border>

							<Border DockPanel.Dock="Right" IsVisible="{TemplateBinding controls:ItemInsertionIndicator.IsInsertingItemAfter}" Margin="{DynamicResource Thickness/TabItem.InsertionIndicator.Margin}">
								<Border Background="{DynamicResource Brush/TabItem.Header.InsertionIndicator.Background}" CornerRadius="{DynamicResource CornerRadius/TabItem.Header}" Margin="{DynamicResource Thickness/TabItem.Header.Margin}" Width="{DynamicResource Double/TabItem.Header.InsertionIndicator.Width}"/>
							</Border>
							
							<Border Name="PART_ContentContainer" Margin="{DynamicResource Thickness/TabItem.Header.Margin}" VerticalAlignment="Bottom">
								<Border.Width>
									<MultiBinding Converter="{x:Static converters:TabItemWidthConverter.Default}">
										<Binding RelativeSource="{RelativeSource AncestorType={x:Type TabControl}}"/>
										<Binding RelativeSource="{RelativeSource AncestorType={x:Type controls:TabStripScrollViewer}}"/>
										<Binding Path="Items.Count" RelativeSource="{RelativeSource AncestorType={x:Type TabControl}}"/> <!-- Triggered by change of Items.Count -->
										<Binding Path="Bounds" RelativeSource="{RelativeSource AncestorType={x:Type controls:TabStripScrollViewer}}"/> <!-- Triggered by change of Bounds -->
									</MultiBinding>
								</Border.Width>
								<Panel>
									<Border Background="{DynamicResource Brush/TabItem.Header.Background}" BorderBrush="{DynamicResource Brush/TabItem.Header.Border}" BorderThickness="1,1,1,0" CornerRadius="{DynamicResource CornerRadius/TabItem.Header}" IsVisible="{Binding !$parent[TabItem].IsSelected}" Margin="0,0,0,1"/>
									<Border Background="{DynamicResource Brush/TabItem.Header.Background.PointerOver}" BorderBrush="{DynamicResource Brush/TabItem.Header.Border.PointerOver}" BorderThickness="1,1,1,0" CornerRadius="{DynamicResource CornerRadius/TabItem.Header}" IsVisible="{Binding $parent[TabItem].IsPointerOver}" Opacity="{Binding $parent[TabItem].IsPointerOver, Converter={x:Static converters:TabItemOpacityConverters.IsPointerOverToOpacity}}" Margin="0,0,0,1">
										<Border.Transitions>
											<Transitions>
												<DoubleTransition Property="Opacity" Duration="{StaticResource TimeSpan/Animation.Fast}" Easing="{StaticResource Easing/Animation}"/>
											</Transitions>
										</Border.Transitions>
									</Border>
									<Border Background="{DynamicResource Brush/TabItem.Header.Background.Selected}" BorderBrush="{DynamicResource Brush/TabItem.Header.Border.Selected}" BorderThickness="1,1,1,0" CornerRadius="{DynamicResource CornerRadius/TabItem.Header}" IsVisible="{Binding $parent[TabItem].IsSelected}" Opacity="{Binding $parent[TabItem].IsSelected, Converter={x:Static converters:TabItemOpacityConverters.IsSelectedToOpacity}}">
										<Border.Transitions>
											<Transitions>
												<DoubleTransition Property="Opacity" Duration="{StaticResource TimeSpan/Animation.Fast}" Easing="{StaticResource Easing/Animation}"/>
											</Transitions>
										</Border.Transitions>
									</Border>
									<ContentPresenter Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Height="{DynamicResource Double/TabItem.Header.Content.Height}" HorizontalAlignment="Stretch" Margin="{DynamicResource Thickness/TabItem.Header.Padding}" VerticalAlignment="Center"/>
								</Panel>
							</Border>
							
						</DockPanel>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="TextBlock.FontSize" Value="{DynamicResource Double/TabItem.Header.FontSize}"/>
	</Style>
	<Style Selector="TabItem.Empty">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate>
					<ContentPresenter Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" Height="{DynamicResource Double/TabItem.Header.Content.Height}" HorizontalAlignment="Center" Margin="{DynamicResource Thickness/TabItem.Header.Padding}" VerticalAlignment="Center"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style Selector="TextBlock.TabItem_TextBlock">
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="TextTrimming" Value="CharacterEllipsis"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>

	<!-- TextBox -->
	<Style Selector="Button.TextBox_InPlaceAction">
		<Setter Property="Background" Value="{DynamicResource ButtonBackgroundTransparent}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Height" Value="{DynamicResource Double/TextBox.InPlaceAction.Size}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/TextBox.InPlaceAction.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/TextBox.InPlaceAction.Padding}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/TextBox.InPlaceAction.Size}"/>
	</Style>
	<Style Selector="Button.TextBox_InPlaceAction /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Transitions" Value="{x:Null}"/>
	</Style>
	<Style Selector="Button.TextBox_InPlaceAction:disabled">
		<Setter Property="IsHitTestVisible" Value="False"/>
	</Style>
	<Style Selector="Button.TextBox_InPlaceAction:disabled /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{x:Null}"/>
	</Style>
	<Style Selector="Panel.TextBox_InPlaceActions">
		<Setter Property="Background" Value="{x:Static Brushes.Transparent}"/>
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/TextBox.InPlaceActions.Margin}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="StackPanel.TextBox_InPlaceActions">
		<Setter Property="Background" Value="{x:Static Brushes.Transparent}"/>
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/TextBox.InPlaceActions.Margin}"/>
		<Setter Property="Orientation" Value="Horizontal"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector=":is(TextBox)">
		<Setter Property="ContextFlyout" Value="{x:Null}"/>
		<Setter Property="ContextMenu">
			<ContextMenu>
				<MenuItem Command="{Binding $parent[TextBox].Cut}" Header="{DynamicResource String/Common.Cut}" IsEnabled="{Binding $parent[TextBox].CanCut}" IsVisible="{Binding !$parent[TextBox].IsReadOnly}" InputGesture="{x:Static input:KeyGestures.Cut}"/>
				<MenuItem Command="{Binding $parent[TextBox].Copy}" Header="{DynamicResource String/Common.Copy}" IsEnabled="{Binding $parent[TextBox].CanCopy}" InputGesture="{x:Static input:KeyGestures.Copy}"/>
				<MenuItem Command="{Binding $parent[TextBox].Paste}" Header="{DynamicResource String/Common.Paste}" IsEnabled="{Binding $parent[TextBox].CanPaste}" IsVisible="{Binding !$parent[TextBox].IsReadOnly}" InputGesture="{x:Static input:KeyGestures.Paste}"/>
				<Separator/>
				<MenuItem Command="{Binding $parent[TextBox].SelectAll}" Header="{DynamicResource String/Common.SelectAll}" IsEnabled="{Binding $parent[TextBox].Text, Converter={x:Static aConverters:StringConverters.IsNotNullOrEmpty}}" InputGesture="{x:Static input:KeyGestures.SelectAll}"/>
				<MenuItem Command="{Binding $parent[TextBox].Clear}" Header="{DynamicResource String/Common.Clear}" IsEnabled="{Binding $parent[TextBox].Text, Converter={x:Static aConverters:StringConverters.IsNotNullOrEmpty}}" IsVisible="{Binding !$parent[TextBox].IsReadOnly}"/>
			</ContextMenu>
		</Setter>
		<Setter Property="SelectionForegroundBrush" Value="{DynamicResource Brush/TextBox.SelectionForeground}"/>
		<Setter Property="Template">
			<ControlTemplate TargetType="{x:Type TextBox}">
				<Panel>
					<Border
						Name="PART_BorderElement"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}"
						MinWidth="{TemplateBinding MinWidth}"
						MinHeight="{TemplateBinding MinHeight}"/>
	
					<Border
						Margin="{TemplateBinding BorderThickness}">
						<Grid ColumnDefinitions="Auto,*,Auto" >
							<ContentPresenter Grid.Column="0"
											Content="{TemplateBinding InnerLeftContent}"/>
							<DockPanel x:Name="PART_InnerDockPanel"
									Grid.Column="1"
									Cursor="IBeam"
									Margin="{TemplateBinding Padding}">
								<TextBlock Name="PART_FloatingWatermark"
											Foreground="{DynamicResource SystemAccentColor}"
											FontSize="{TemplateBinding FontSize}"
											IsVisible="False"
											Text="{TemplateBinding Watermark}"
											DockPanel.Dock="Top" />
								<ScrollViewer HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
												VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}"
												IsScrollChainingEnabled="{TemplateBinding (ScrollViewer.IsScrollChainingEnabled)}"
												AllowAutoHide="{TemplateBinding (ScrollViewer.AllowAutoHide)}">
									<Panel>
										<TextBlock Name="PART_Watermark"
												Opacity="0.5"
												Text="{TemplateBinding Watermark}"
												TextAlignment="{TemplateBinding TextAlignment}"
												TextWrapping="{TemplateBinding TextWrapping}"
												HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
												VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
											<TextBlock.IsVisible>
												<MultiBinding Converter="{x:Static BoolConverters.And}">
													<Binding Path="PreeditText" ElementName="PART_TextPresenter" Converter="{x:Static StringConverters.IsNullOrEmpty}"/>
													<Binding Path="Text" ElementName="PART_TextPresenter" Converter="{x:Static StringConverters.IsNullOrEmpty}"/>
												</MultiBinding>
											</TextBlock.IsVisible>
										</TextBlock>
										<TextPresenter Name="PART_TextPresenter"
														Text="{TemplateBinding Text, Mode=TwoWay}"
														CaretIndex="{TemplateBinding CaretIndex}"
														TextElement.FontFamily="{TemplateBinding FontFamily}"
														TextElement.FontSize="{TemplateBinding FontSize}"
														TextElement.FontStyle="{TemplateBinding FontStyle}"
														TextElement.FontWeight="{TemplateBinding FontWeight}"
														TextElement.Foreground="{TemplateBinding Foreground}"
														SelectionStart="{TemplateBinding SelectionStart}"
														SelectionEnd="{TemplateBinding SelectionEnd}"
														TextAlignment="{TemplateBinding TextAlignment}"
														TextWrapping="{TemplateBinding TextWrapping}"
														LineHeight="{TemplateBinding LineHeight}"
														LetterSpacing="{TemplateBinding LetterSpacing}"
														PasswordChar="{TemplateBinding PasswordChar}"
														RevealPassword="{TemplateBinding RevealPassword}"
														SelectionBrush="{TemplateBinding SelectionBrush}"
														SelectionForegroundBrush="{TemplateBinding SelectionForegroundBrush}"
														CaretBrush="{TemplateBinding CaretBrush}"
														HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
														VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
									</Panel>
								</ScrollViewer>
							</DockPanel>
							<ContentPresenter Grid.Column="2" Content="{TemplateBinding InnerRightContent}"/>
						</Grid>
					</Border>
				</Panel>
			</ControlTemplate>
		</Setter>
	</Style>
	<Style Selector="TextBox:disabled">
		<!-- [Workaround] -->
		<Setter Property="Foreground" Value="{DynamicResource TextControlForegroundDisabled}" />
	</Style>
	<Style Selector="TextBox.WithInPlaceAction">
		<Setter Property="Padding" Value="{DynamicResource Thickness/TextBox.Padding.WithInPlaceAction.1}"/>
	</Style>
	<Style Selector="TextBox.With2InPlaceActions">
		<Setter Property="Padding" Value="{DynamicResource Thickness/TextBox.Padding.WithInPlaceAction.2}"/>
	</Style>
	<Style Selector="TextBox.With3InPlaceActions">
		<Setter Property="Padding" Value="{DynamicResource Thickness/TextBox.Padding.WithInPlaceAction.3}"/>
	</Style>
	<Style Selector="ToggleButton.TextBox_InPlaceAction">
		<Setter Property="Background" Value="{DynamicResource ButtonBackgroundTransparent}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Height" Value="{DynamicResource Double/TextBox.InPlaceAction.Size}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/TextBox.InPlaceAction.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/TextBox.InPlaceAction.Padding}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/TextBox.InPlaceAction.Size}"/>
	</Style>
	<Style Selector="ToggleButton.TextBox_InPlaceAction /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Transitions" Value="{x:Null}"/>
	</Style>
	<Style Selector="ToggleButton.TextBox_InPlaceAction:disabled">
		<Setter Property="IsHitTestVisible" Value="False"/>
	</Style>
	<Style Selector="ToggleButton.TextBox_InPlaceAction:disabled /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{x:Null}"/>
	</Style>

	<!-- TimePicker -->
	<Style Selector="TimePicker">
		<Setter Property="BorderThickness" Value="{DynamicResource Thickness/Control.Border}"/>
	</Style>

	<!-- TimeSpanTextBox -->
	<Style Selector="TextBox:timeSpanTextBox">
		<Setter Property="Watermark" Value="{DynamicResource String/TimeSpanTextBox.Watermark}"/>
	</Style>

	<!-- ToggleButton -->
	<Style Selector="ToggleButton">
		<Setter Property="BorderThickness" Value="{DynamicResource Thickness/Button.Border}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>

	<!-- ToggleSwitch -->
	<Style Selector="ToggleSwitch">
		<Setter Property="OffContent" Value="{x:Null}"/>
		<Setter Property="OnContent" Value="{x:Null}"/>
		<Setter Property="Width" Value="40"/>
	</Style>
	<Style Selector="ToggleSwitch:disabled">
		<Setter Property="Opacity" Value="0.5"/>
	</Style>

	<!-- ToolBar -->
	<Style Selector="Border.ToolBar">
		<Setter Property="Background" Value="{DynamicResource Brush/ToolBar.Background}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/ToolBar.Padding}"/>
	</Style>
	<Style Selector="Border.ToolBar_NotificationIndicator">
		<Setter Property="Height" Value="{DynamicResource Double/ToolBar.Button.Icon.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/ToolBar.Button.Icon.Size}"/>
	</Style>
	<Style Selector="Button.ToolBar_Button">
		<Setter Property="Background" Value="{DynamicResource Brush/ToolBar.Button.Background.Transparent}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Height" Value="{DynamicResource Double/ToolBar.Button.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/ToolBar.Button.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/ToolBar.Button.Padding}"/>
		<Setter Property="Transitions" Value="{x:Null}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/ToolBar.Button.Size}"/>
	</Style>
	<Style Selector="Button.ToolBar_Button /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Transitions" Value="{x:Null}"/>
	</Style>
	<Style Selector="Button.ToolBar_Button:disabled">
		<Setter Property="IsHitTestVisible" Value="False"/>
	</Style>
	<Style Selector="Button.ToolBar_Button:disabled /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{x:Null}"/>
	</Style>
	<Style Selector="Button.ToolBar_Button:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/ToolBar.Button.Background.PointerOver}"/>
	</Style>
	<Style Selector="Button.ToolBar_Button:pressed /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/ToolBar.Button.Background.Pressed}"/>
	</Style>
	<Style Selector="Button.ToolBar_Button_WithDropDownButton">
		<Setter Property="Background" Value="{DynamicResource Brush/ToolBar.Button.Background.Transparent}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Height" Value="{DynamicResource Double/ToolBar.Button.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/ToolBar.Button.Margin.WithDropDownButton}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/ToolBar.Button.Padding}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/ToolBar.Button.Size}"/>
	</Style>
	<Style Selector="Button.ToolBar_Button_WithDropDownButton /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Transitions" Value="{x:Null}"/>
	</Style>
	<Style Selector="Button.ToolBar_Button_WithDropDownButton:disabled">
		<Setter Property="IsHitTestVisible" Value="False"/>
	</Style>
	<Style Selector="Button.ToolBar_Button_WithDropDownButton:disabled /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{x:Null}"/>
	</Style>
	<Style Selector="Button.ToolBar_Button_WithDropDownButton:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/ToolBar.Button.Background.PointerOver}"/>
	</Style>
	<Style Selector="Button.ToolBar_Button_WithDropDownButton:pressed /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/ToolBar.Button.Background.Pressed}"/>
	</Style>
	<Style Selector="ComboBox.ToolBar_ComboBox">
		<Setter Property="Margin" Value="{DynamicResource Thickness/ToolBar.Item.Margin}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="ComboBox.ToolBar_ComboBox:disabled">
		<Setter Property="IsHitTestVisible" Value="False"/>
	</Style>
	<Style Selector=":is(Image).ToolBar_DropDownButtonIcon">
		<Setter Property="Height" Value="{DynamicResource Double/ToolBar.DropDownButton.Icon.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Stretch" Value="Uniform"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/ToolBar.DropDownButton.Icon.Size}"/>
	</Style>
	<Style Selector=":is(Image).ToolBar_NotificationIndicator">
		<Setter Property="Height" Value="{DynamicResource Double/ToolBar.NotificationIndicator.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="RenderTransform">
			<TranslateTransform X="{DynamicResource Double/ToolBar.NotificationIndicator.Offset}" Y="{DynamicResource Double/ToolBar.NotificationIndicator.Offset}"/>
		</Setter>
		<Setter Property="Stretch" Value="Fill"/>
		<Setter Property="VerticalAlignment" Value="Bottom"/>
		<Setter Property="Width" Value="{DynamicResource Double/ToolBar.NotificationIndicator.Size}"/>
	</Style>
	<Style Selector="Panel.ToolBar_NotificationIndicator">
		<Setter Property="Height" Value="{DynamicResource Double/ToolBar.Button.Icon.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/ToolBar.Button.Icon.Size}"/>
	</Style>
	<Style Selector="RepeatButton.ToolBar_RepeatButton">
		<Setter Property="Background" Value="{DynamicResource Brush/ToolBar.Button.Background.Transparent}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Height" Value="{DynamicResource Double/ToolBar.Button.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/ToolBar.Button.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/ToolBar.Button.Padding}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/ToolBar.Button.Size}"/>
	</Style>
	<Style Selector="RepeatButton.ToolBar_RepeatButton /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Transitions" Value="{x:Null}"/>
	</Style>
	<Style Selector="RepeatButton.ToolBar_RepeatButton:disabled">
		<Setter Property="IsHitTestVisible" Value="False"/>
	</Style>
	<Style Selector="RepeatButton.ToolBar_RepeatButton:disabled /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{x:Null}"/>
	</Style>
	<Style Selector="RepeatButton.ToolBar_RepeatButton:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/ToolBar.Button.Background.PointerOver}"/>
	</Style>
	<Style Selector="RepeatButton.ToolBar_RepeatButton:pressed /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/ToolBar.Button.Background.Pressed}"/>
	</Style>
	<Style Selector="Separator.ToolBar_Separator">
		<Setter Property="Background" Value="{DynamicResource Brush/Separator.Background}"/>
		<Setter Property="Height" Value="NaN"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/ToolBar.Separator.Margin}"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="Width" Value="1"/>
	</Style>
	<Style Selector="Separator.ToolBar_Separator_Horizontal">
		<Setter Property="Background" Value="{DynamicResource Brush/Separator.Background}"/>
		<Setter Property="Height" Value="1"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/ToolBar.Separator.Margin}"/>
		<Setter Property="Width" Value="NaN"/>
	</Style>
	<Style Selector="TextBlock.ToolBar_TextBlock">
		<Setter Property="Margin" Value="{DynamicResource Thickness/ToolBar.TextBlock.Margin}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="TextBlock.ToolBar_TextBlock:disabled">
		<Setter Property="Opacity" Value="{DynamicResource Double/Icon.Opacity.Disabled}"/>
	</Style>
	<Style Selector="TextBox.ToolBar_TextBox">
		<Setter Property="Margin" Value="{DynamicResource Thickness/ToolBar.Item.Margin}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="TextBox.ToolBar_TextBox:disabled">
		<Setter Property="IsHitTestVisible" Value="False"/>
	</Style>
	<Style Selector="TextBox.ToolBar_TextBox_WithInPlaceAction">
		<Setter Property="Margin" Value="{DynamicResource Thickness/ToolBar.Item.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/TextBox.Padding.WithInPlaceAction.1}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="TextBox.ToolBar_TextBox_WithInPlaceAction:disabled">
		<Setter Property="IsHitTestVisible" Value="False"/>
	</Style>
	<Style Selector="TextBox.ToolBar_TextBox_With2InPlaceActions">
		<Setter Property="Margin" Value="{DynamicResource Thickness/ToolBar.Item.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/TextBox.Padding.WithInPlaceAction.2}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="TextBox.ToolBar_TextBox_With2InPlaceActions:disabled">
		<Setter Property="IsHitTestVisible" Value="False"/>
	</Style>
	<Style Selector="TextBox.ToolBar_TextBox_With3InPlaceActions">
		<Setter Property="Margin" Value="{DynamicResource Thickness/ToolBar.Item.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/TextBox.Padding.WithInPlaceAction.3}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="TextBox.ToolBar_TextBox_With3InPlaceActions:disabled">
		<Setter Property="IsHitTestVisible" Value="False"/>
	</Style>
	<Style Selector="ToggleButton.ToolBar_DropDownButton">
		<Setter Property="Background" Value="{DynamicResource Brush/ToolBar.Button.Background.Transparent}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Height" Value="{DynamicResource Double/ToolBar.Button.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/ToolBar.DropDownButton.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/ToolBar.DropDownButton.Padding}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style Selector="ToggleButton.ToolBar_DropDownButton /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Transitions" Value="{x:Null}"/>
	</Style>
	<Style Selector="ToggleButton.ToolBar_DropDownButton:disabled">
		<Setter Property="IsHitTestVisible" Value="False"/>
	</Style>
	<Style Selector="ToggleButton.ToolBar_DropDownButton:disabled /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{x:Null}"/>
	</Style>
	<Style Selector="ToggleButton.ToolBar_DropDownButton:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/ToolBar.Button.Background.PointerOver}"/>
	</Style>
	<Style Selector="ToggleButton.ToolBar_DropDownButton:pressed /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/ToolBar.Button.Background.Pressed}"/>
	</Style>
	<Style Selector="ToggleButton.ToolBar_DropDownButton:checked:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedPointerOver}"/>
	</Style>
	<Style Selector="ToggleButton.ToolBar_DropDownButton:checked:pressed /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedPressed}"/>
	</Style>
	<Style Selector="ToggleButton.ToolBar_ToggleButton">
		<Setter Property="Background" Value="{DynamicResource Brush/ToolBar.Button.Background.Transparent}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Height" Value="{DynamicResource Double/ToolBar.Button.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/ToolBar.Button.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/ToolBar.Button.Padding}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/ToolBar.Button.Size}"/>
	</Style>
	<Style Selector="ToggleButton.ToolBar_ToggleButton /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Transitions" Value="{x:Null}"/>
	</Style>
	<Style Selector="ToggleButton.ToolBar_ToggleButton:disabled">
		<Setter Property="IsHitTestVisible" Value="False"/>
	</Style>
	<Style Selector="ToggleButton.ToolBar_ToggleButton:disabled /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{x:Null}"/>
	</Style>
	<Style Selector="ToggleButton.ToolBar_ToggleButton:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/ToolBar.Button.Background.PointerOver}"/>
	</Style>
	<Style Selector="ToggleButton.ToolBar_ToggleButton:pressed /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource Brush/ToolBar.Button.Background.Pressed}"/>
	</Style>
	<Style Selector="ToggleButton.ToolBar_ToggleButton:checked:pointerover /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedPointerOver}"/>
	</Style>
	<Style Selector="ToggleButton.ToolBar_ToggleButton:checked:pressed /template/ ContentPresenter#PART_ContentPresenter">
		<Setter Property="Background" Value="{DynamicResource ToggleButtonBackgroundCheckedPressed}"/>
	</Style>

	<!-- ToolBarScrollViewer -->
	<Style Selector="RepeatButton.ToolBarScrollViewer">
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/ToolBarScrollViewer.ScrollingButton.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/ToolBarScrollViewer.ScrollingButton.Padding}"/>
		<Setter Property="VerticalAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
	</Style>
	<Style Selector="controls|ToolBarScrollViewer">
		<Setter Property="Background" Value="{x:Static Brushes.Transparent}"/>
		<Setter Property="HorizontalScrollBarVisibility" Value="Visible"/>
		<Setter Property="Template">
			<ControlTemplate>
				<Panel Background="{TemplateBinding Background}">
					<ScrollContentPresenter Name="PART_ContentPresenter"
                        Margin="{TemplateBinding Padding}">
						<ScrollContentPresenter.GestureRecognizers>
							<ScrollGestureRecognizer
								CanHorizontallyScroll="{Binding #PART_ContentPresenter.CanHorizontallyScroll}"
								CanVerticallyScroll="{Binding #PART_ContentPresenter.CanVerticallyScroll}" />
						</ScrollContentPresenter.GestureRecognizers>
					</ScrollContentPresenter>
					<RepeatButton Name="PART_ScrollLeftButton"
						Classes="ToolBarScrollViewer"
						Command="{Binding ScrollLeft, RelativeSource={RelativeSource TemplatedParent}}"
                        HorizontalAlignment="Left">
						<RepeatButton.IsVisible>
							<MultiBinding Converter="{x:Static converters:ScrollingButtonVisibilityConverter.Default}" ConverterParameter="Left">
								<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Offset.X"/>
								<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Extent.Width"/>
								<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Viewport.Width"/>
							</MultiBinding>
						</RepeatButton.IsVisible>
						<Image
							Classes="Icon"
							Height="{DynamicResource Double/ToolBarScrollViewer.ScrollingButton.Icon.Size}"
							Source="{DynamicResource Image/Icon.DropDown.Left}"
							Width="{DynamicResource Double/ToolBarScrollViewer.ScrollingButton.Icon.Size}"/>
					</RepeatButton>
					<RepeatButton Name="PART_ScrollRightButton"
						Classes="ToolBarScrollViewer"
						Command="{Binding ScrollRight, RelativeSource={RelativeSource TemplatedParent}}"
                        HorizontalAlignment="Right">
						<RepeatButton.IsVisible>
							<MultiBinding Converter="{x:Static converters:ScrollingButtonVisibilityConverter.Default}" ConverterParameter="Right">
								<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Offset.X"/>
								<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Extent.Width"/>
								<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Viewport.Width"/>
							</MultiBinding>
						</RepeatButton.IsVisible>
						<Image
							Classes="Icon"
							Height="{DynamicResource Double/ToolBarScrollViewer.ScrollingButton.Icon.Size}"
							Source="{DynamicResource Image/Icon.DropDown.Right}"
							Width="{DynamicResource Double/ToolBarScrollViewer.ScrollingButton.Icon.Size}"/>
					</RepeatButton>
					<RepeatButton Name="PART_ScrollUpButton"
						Classes="ToolBarScrollViewer"
						Command="{Binding ScrollUp, RelativeSource={RelativeSource TemplatedParent}}"
						HorizontalAlignment="Stretch"
                        VerticalAlignment="Top">
						<RepeatButton.IsVisible>
							<MultiBinding Converter="{x:Static converters:ScrollingButtonVisibilityConverter.Default}" ConverterParameter="Up">
								<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Offset.Y"/>
								<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Extent.Height"/>
								<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Viewport.Height"/>
							</MultiBinding>
						</RepeatButton.IsVisible>
						<Image
							Classes="Icon"
							Height="{DynamicResource Double/ToolBarScrollViewer.ScrollingButton.Icon.Size}"
							Source="{DynamicResource Image/Icon.DropDown.Up}"
							Width="{DynamicResource Double/ToolBarScrollViewer.ScrollingButton.Icon.Size}"/>
					</RepeatButton>
					<RepeatButton Name="PART_ScrollDownButton"
						Classes="ToolBarScrollViewer"
						Command="{Binding ScrollDown, RelativeSource={RelativeSource TemplatedParent}}"
						HorizontalAlignment="Stretch"
                        VerticalAlignment="Bottom">
						<RepeatButton.IsVisible>
							<MultiBinding Converter="{x:Static converters:ScrollingButtonVisibilityConverter.Default}" ConverterParameter="Down">
								<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Offset.Y"/>
								<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Extent.Height"/>
								<Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Viewport.Height"/>
							</MultiBinding>
						</RepeatButton.IsVisible>
						<Image
							Classes="Icon"
							Height="{DynamicResource Double/ToolBarScrollViewer.ScrollingButton.Icon.Size}"
							Source="{DynamicResource Image/Icon.DropDown.Down}"
							Width="{DynamicResource Double/ToolBarScrollViewer.ScrollingButton.Icon.Size}"/>
					</RepeatButton>
				</Panel>
			</ControlTemplate>
		</Setter>
		<Setter Property="VerticalScrollBarVisibility" Value="Disabled"/>
	</Style>

	<!-- ToolTip -->
	<Style Selector="ToolTip">
		<Setter Property="CornerRadius" Value="{DynamicResource CornerRadius/ToolTip}"/>
		<Setter Property="Template">
			<ControlTemplate>
				<Border Name="PART_LayoutRoot"
				        BorderThickness="{TemplateBinding BorderThickness}"
				        BoxShadow="{StaticResource BoxShadows/Shadow.Light}"
				        Background="{TemplateBinding Background}"
				        BorderBrush="{TemplateBinding BorderBrush}"
				        Margin="{StaticResource Thickness/ToolTip.Margin}"
				        Padding="{TemplateBinding Padding}"
				        CornerRadius="{TemplateBinding CornerRadius}">
					<ContentPresenter Name="PART_ContentPresenter"
					                  MaxWidth="{TemplateBinding MaxWidth}"
					                  Content="{TemplateBinding Content}"
					                  ContentTemplate="{TemplateBinding ContentTemplate}"
					                  TextBlock.TextWrapping="Wrap"/>
				</Border>
			</ControlTemplate>
		</Setter>
	</Style>

	<!-- TreeView -->
	<Style Selector="TreeView">
		<Setter Property="Background" Value="{DynamicResource TextControlBackground}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrush}"/>
		<Setter Property="BorderThickness" Value="{DynamicResource Thickness/Control.Border}"/>
		<Setter Property="CornerRadius" Value="{DynamicResource ControlCornerRadius}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/TreeView.Padding}"/>
		<Setter Property="Template">
			<ControlTemplate>
				<Border Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{TemplateBinding CornerRadius}">
					<ScrollViewer Background="{x:Static Brushes.Transparent}"
								HorizontalScrollBarVisibility="{TemplateBinding (ScrollViewer.HorizontalScrollBarVisibility)}"
								VerticalScrollBarVisibility="{TemplateBinding (ScrollViewer.VerticalScrollBarVisibility)}"
								AllowAutoHide="{TemplateBinding (ScrollViewer.AllowAutoHide)}">
							<ItemsPresenter Name="PART_ItemsPresenter"
						                ItemsPanel="{TemplateBinding ItemsPanel}"
						                Margin="{TemplateBinding Padding}" />
					</ScrollViewer>
				</Border>
			</ControlTemplate>
		</Setter>
	</Style>
	<Style Selector="TreeView:focused">
		<Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushFocused}"/>
	</Style>
	<Style Selector="TreeView:pointerover">
		<Setter Property="BorderBrush" Value="{DynamicResource TextControlBorderBrushPointerOver}"/>
	</Style>

	<!-- TreeViewItem -->
	<Style Selector="ToggleButton.ExpandCollapseChevron">
		<Setter Property="Width" Value="{DynamicResource Double/TreeViewItem.Chevron.Width}" />
		<Setter Property="Height" Value="{DynamicResource Double/TreeViewItem.Chevron.Width}" />
	</Style>
	<Style Selector="TreeViewItem">
		<Setter Property="CornerRadius" Value="{DynamicResource CornerRadius/TreeViewItem}"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/TreeViewItem.Margin}"/>
		<Setter Property="Padding" Value="{DynamicResource Thickness/TreeViewItem.Padding}"/>
	</Style>
	<Style Selector="TreeViewItem:empty /template/ Panel#PART_ExpandCollapseChevronContainer">
		<Setter Property="Width" Value="{DynamicResource Double/TreeViewItem.Chevron.Width}" />
	</Style>
	<Style Selector="TreeViewItem:disabled /template/ ContentPresenter#PART_HeaderPresenter">
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource TreeViewItemForegroundDisabled}" />
	</Style>
	<Style Selector="Border.TreeViewItem_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/TreeViewItem.Icon.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/TreeViewItem.Icon.Margin}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/TreeViewItem.Icon.Size}"/>
	</Style>
	<Style Selector=":is(Image).TreeViewItem_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/TreeViewItem.Icon.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/TreeViewItem.Icon.Margin}"/>
		<Setter Property="Stretch" Value="Uniform"/>
		<Setter Property="StretchDirection" Value="Both"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/TreeViewItem.Icon.Size}"/>
	</Style>
	<Style Selector=":is(Image).TreeViewItem_Icon:disabled">
		<Setter Property="Opacity" Value="{DynamicResource Double/Icon.Opacity.Disabled}"/>
	</Style>
	<Style Selector="Panel.TreeViewItem_Icon">
		<Setter Property="Height" Value="{DynamicResource Double/TreeViewItem.Icon.Size}"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="IsHitTestVisible" Value="False"/>
		<Setter Property="Margin" Value="{DynamicResource Thickness/TreeViewItem.Icon.Margin}"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Width" Value="{DynamicResource Double/TreeViewItem.Icon.Size}"/>
	</Style>
	<Style Selector="TextBlock.TreeViewItem_TextBlock">
		<Setter Property="TextTrimming" Value="CharacterEllipsis"/>
		<Setter Property="TextWrapping" Value="NoWrap"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
	</Style>
	<Style Selector="ToggleButton.ExpandCollapseChevron">
		<Setter Property="Width" Value="{DynamicResource Double/TreeViewItem.Chevron.Width}" />
	</Style>

	<!-- UriTextBox -->
	<Style Selector="TextBox:uriTextBox">
		<Setter Property="Watermark" Value="{DynamicResource String/UriTextBox.Watermark}"/>
	</Style>

	<!-- Window -->
	<Style Selector="Window">
		<Setter Property="Background" Value="{Binding $self.TransparencyLevelHint, Converter={x:Static converters:WindowBackgroundConverters.Default}}"/>
		<Setter Property="Template">
			<ControlTemplate>
				<Panel>
					<Border Name="PART_TransparencyFallback" IsHitTestVisible="False" />
					<Border Name="PART_Background" Background="{TemplateBinding Background}" IsHitTestVisible="False" />
					<Panel Background="Transparent" Margin="{TemplateBinding WindowDecorationMargin}" />
					<Panel>
						<VisualLayerManager>
							<VisualLayerManager.ChromeOverlayLayer>
								<TitleBar />
							</VisualLayerManager.ChromeOverlayLayer>
							<ContentPresenter Name="PART_ContentPresenter"
											  ContentTemplate="{TemplateBinding ContentTemplate}"
											  Content="{TemplateBinding Content}"
											  Margin="{TemplateBinding Padding}"
											  HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
											  VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</VisualLayerManager>
						<controls:FullWindowTutorialPresenter Name="PART_TutorialPresenter" IsVisible="False"/>
						<Border Name="PART_ContentFadingOverlay" Background="{DynamicResource Brush/Window.ContentFadingOverlay}" IsHitTestVisible="False" IsVisible="False" Opacity="0"/>
					</Panel>
				</Panel>
			</ControlTemplate>
		</Setter>
	</Style>
	<Style Selector="Window.Tabbed">
		<Setter Property="Background" Value="{Binding $self.TransparencyLevelHint, Converter={x:Static converters:WindowBackgroundConverters.Tabbed}}"/>
	</Style>
	
</Styles>
